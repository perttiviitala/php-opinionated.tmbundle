<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array/>
	<key>firstLineMatch</key>
	<string>&lt;?php</string>
	<key>foldingStartMarker</key>
	<string>(/\*|\{\s*$)</string>
	<key>foldingStopMarker</key>
	<string>(\*/|^\s*\})</string>
	<key>keyEquivalent</key>
	<string>^~P</string>
	<key>name</key>
	<string>PHP</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>comment</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(&lt;\?php)</string>
			<key>name</key>
			<string>puncuation.section.embedded.begin.php</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\?&gt;)</string>
			<key>name</key>
			<string>puncuation.section.embedded.end.php</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#language</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>class-builtin</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.inheritance.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?ix)
						(\\)?\b
						(st(dClass|reamWrapper)|R(RD(Graph|Creator|Updater)|untimeException|e(sourceBundle|cursive(RegexIterator|Ca(chingIterator|llbackFilterIterator)|TreeIterator|Iterator(Iterator)?|DirectoryIterator|FilterIterator|ArrayIterator)|flect(ion(Generator|Method|Class|Type|ZendExtension|Object|P(arameter|roperty)|Extension|Function(Abstract)?)?|or)|gexIterator)|angeException)|G(ender\\Gender|lobIterator|magick(Draw|Pixel)?)|X(sltProcessor|ML(Reader|Diff\\(Memory|Base|DOM|File)|Writer)|SLTProcessor)|M(ysqlndUh(Connection|PreparedStatement)|ongo(Re(sultException|gex)|Grid(fsFile|FS(Cursor|File)?)|BinData|C(o(de|llection|mmandCursor)|ursor(Interface|Exception)?|lient)|Timestamp|I(n(sertBatch|t(32|64))|d)|D(B(Ref|\\(BSON\\(Regex|M(inKey|axKey)|Binary|Serializable|Timestamp|ObjectID|Decimal128|U(nserializable|TCDateTime)|Javascript)|Driver\\(Read(Concern|Preference)|Manager|BulkWrite|Server|C(ommand|ursor(Id)?)|Exception\\WriteException|Query|Write(Result|Concern(Error)?|Error))))?|eleteBatch|ate)|UpdateBatch|Pool|Write(Batch|ConcernException)|Log)?|u(tex|ltipleIterator)|e(ssageFormatter|mcache(d)?))|Bad(MethodCallException|FunctionCallException)|tidy(Node)?|S(ync(ReaderWriter|Mutex|S(haredMemory|emaphore)|Event)|impleXML(Iterator|Element)|oap(Server|Header|Client|Param|Var|Fault)|NMP|CA(_(SoapProxy|LocalProxy))?|p(hinxClient|oofchecker|l(M(inHeap|axHeap)|S(tack|ubject)|Heap|T(ype|empFileObject)|Ob(server|jectStorage)|DoublyLinkedList|PriorityQueue|Enum|Queue|Fi(le(Info|Object)|xedArray)))|e(ssionHandler(Interface)?|ekableIterator|rializable)|DO_(Model_(ReflectionDataObject|Type|Property)|Sequence|D(ata(Object|Factory)|AS_(Relational|XML(_Document)?|Setting|ChangeSummary|Data(Object|Factory)))|Exception|List)|wish(Result(s)?|Search)?|VM(Model)?|QLite(Result|3(Result|Stmt)?|Database|Unbuffered)|AM(Message|Connection))|H(RTime\\(StopWatch|PerformanceCounter)|aru(Image|Outline|D(oc|estination)|Page|Encoder|Font|Annotation))
						|Ya(f_(R(oute(_(Re(write|gex)|Map|S(tatic|imple|upervar)|Interface)|r)|e(sponse_Abstract|quest_(Simple|Http|Abstract)|gistry))|Session|Con(troller_Abstract|fig_(Simple|Ini|Abstract))|Dispatcher|Plugin_Abstract|Exception|View_(Simple|Interface)|Loader|A(ction_Abstract|pplication))|r_(Server(_Exception)?|C(oncurrent_Client|lient(_Exception)?)))|N(o(RewindIterator|rmalizer)|umberFormatter)|C(o(nd|untable|ll(ectable|ator))|URLFile|a(chingIterator|llbackFilterIterator))|T(hread(ed)?|okyoTyrant(Table|Iterator|Query)?|ra(nsliterator|versable))|I(n(tl(RuleBasedBreakIterator|BreakIterator|C(har|odePointBreakIterator|alendar)|TimeZone|Iterator|DateFormatter|PartsIterator)|validArgumentException|finiteIterator)|terator(Iterator|Aggregate)?|magick(Draw|Pixel(Iterator)?|Kernel)?)|php_user_filter|Z(MQ(Socket|Context|Device|Poll)?|ipArchive|ookeeper)|O(CI\-(Collection|Lob)|ut(erIterator|Of(RangeException|BoundsException))|verflowException)|D(s\\(Map|S(tack|e(t|quence))|Hashable|Collection|Deque|P(air|riorityQueue)|Vector|Queue)|irectory(Iterator)?|omainException|OM(XPath|N(ode(list)?|amedNodeMap)|C(haracterData|omment|dataSection)|Text|Implementation|Document(Fragment)?|ProcessingInstruction|E(ntityReference|lement)|Attr)|ate(Time(I(nterface|mmutable)|Zone)?|Interval|Period))|U(n(derflowException|expectedValueException)|Converter|I\\(Menu(Item)?|Size|Control(s\\(Radio|Gr(id|oup)|MultilineEntry|B(ox|utton)|S(pin|eparator|lider)|C(heck|o(lorButton|mbo))|Tab|P(icker|rogress)|E(ntry|ditableCombo)|Form|Label))?|Draw\\(Matrix|Brush(\\(RadialGradient|Gradient|LinearGradient))?|Stroke|Color|Text\\(Font(\\Descriptor)?|Layout)|P(en|ath))|Point|Executor|Window|Area))|JsonSerializable|finfo|P(har(Data|FileInfo)?|ool|DO(Statement)?|arentIterator)|E(v(S(tat|ignal)|Ch(ild|eck)|Timer|I(o|dle)|ent(B(uffer(Event)?|ase)|SslContext|Http(Request|Connection)?|Config|DnsBase|Util|Listener)?|P(eriodic|repare)|Embed|Fork|Watcher|Loop)?|rrorException|xception|mptyIterator)|V(8Js(Exception)?|arnish(Stat|Log|Admin))|KTaglib_(MPEG_(File|AudioProperties)|Tag|ID3v2_(Tag|Frame|AttachedPictureFrame))|QuickHash(StringIntHash|Int(S(tringHash|et)|Hash))|F(il(terIterator|esystemIterator)|ANNConnection)|mysqli(_(stmt|driver|warning|result))?|W(orker|eak(Map|ref))|L(imitIterator|o(cale|gicException)|ua(Closure)?|engthException|apack)|A(ppendIterator|PC(Iterator|UIterator)|rray(Iterator|Object|Access)))
						\b
					</string>
					<key>name</key>
					<string>support.class.builtin.php</string>
				</dict>
			</array>
		</dict>
		<key>class-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(?=\\?[a-z_0-9]+\\)</string>
					<key>end</key>
					<string>(?i)([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\]|\z)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#namespace</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#class-builtin</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=[\\a-zA-Z_])</string>
					<key>end</key>
					<string>(?i)([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\]|\z)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#namespace</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*\*(?:#@\+)?\s*$</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.php</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>This now only highlights a docblock if the first line contains only /**
								- this is to stop highlighting everything as invalid when people do comment banners with /******** ...
								- Now matches /**#@+ too - used for docblock templates: http://manual.phpdoc.org/HTMLframesConverter/default/phpDocumentor/tutorial_phpDocumentor.howto.pkg.html#basics.docblocktemplate</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.documentation.phpdoc.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#php_doc</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=//)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>//</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.php</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\n|(?=\?&gt;)</string>
							<key>name</key>
							<string>comment.line.double-slash.php</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=#)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>#</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.php</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\n|(?=\?&gt;)</string>
							<key>name</key>
							<string>comment.line.number-sign.php</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?xi)(?=
			            (
			                (\\[a-z_][a-z_0-9]*\\[a-z_][a-z_0-9\\]*)|
			                ([a-z_][a-z_0-9]*\\[a-z_][a-z_0-9\\]*)
			            )
			            [^a-z_0-9\\])</string>
					<key>end</key>
					<string>(?i)([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.other.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#namespace</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=\\?[a-zA-Z_\x{7f}-\x{ff}])</string>
					<key>end</key>
					<string>(?=[^\\a-zA-Z_\x{7f}-\x{ff}])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(TRUE|FALSE|NULL|__(FILE|DIR|FUNCTION|CLASS|METHOD|LINE|NAMESPACE)__|ON|OFF|YES|NO|NL|BR|TAB)\b</string>
							<key>name</key>
							<string>constant.language.php</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.inheritance.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\\)?\b(STD(IN|OUT|ERR)|ZEND_(THREAD_SAFE|DEBUG_BUILD)|DEFAULT_INCLUDE_PATH|P(HP_(R(OUND_HALF_(ODD|DOWN|UP|EVEN)|ELEASE_VERSION)|M(INOR_VERSION|A(XPATHLEN|JOR_VERSION))|BINDIR|S(HLIB_SUFFIX|YSCONFDIR|API)|CONFIG_FILE_(SCAN_DIR|PATH)|INT_(MAX|SIZE)|ZTS|O(S|UTPUT_HANDLER_(START|CONT|END))|D(EBUG|ATADIR)|URL_(SCHEME|HOST|USER|P(ORT|A(SS|TH))|QUERY|FRAGMENT)|PREFIX|E(XT(RA_VERSION|ENSION_DIR)|OL)|VERSION(_ID)?|WINDOWS_(NT_(SERVER|DOMAIN_CONTROLLER|WORKSTATION)|VERSION_(M(INOR|AJOR)|BUILD|S(UITEMASK|P_M(INOR|AJOR))|P(RODUCTTYPE|LATFORM)))|L(IBDIR|OCALSTATEDIR))|EAR_(INSTALL_DIR|EXTENSION_DIR))|E_(RECOVERABLE_ERROR|STRICT|NOTICE|CO(RE_(ERROR|WARNING)|MPILE_(ERROR|WARNING))|DEPRECATED|USER_(NOTICE|DEPRECATED|ERROR|WARNING)|PARSE|ERROR|WARNING|ALL))\b</string>
							<key>name</key>
							<string>support.constant.core.php</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.inheritance.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\\)?\b(RADIXCHAR|GROUPING|M(_(1_PI|SQRT(1_2|2|3|PI)|2_(SQRTPI|PI)|PI(_(2|4))?|E(ULER)?|L(N(10|2|PI)|OG(10E|2E)))|ON_(GROUPING|1(1|2|0)?|7|2|8|THOUSANDS_SEP|3|DECIMAL_POINT|9|4|5|6))|S(TR_PAD_(RIGHT|BOTH|LEFT)|ORT_(REGULAR|STRING|NUMERIC|DESC|LOCALE_STRING|ASC)|EEK_(SET|CUR|END))|H(TML_(SPECIALCHARS|ENTITIES)|ASH_HMAC)|YES(STR|EXPR)|N(_(S(IGN_POSN|EP_BY_SPACE)|CS_PRECEDES)|O(STR|EXPR)|EGATIVE_SIGN|AN)|C(R(YPT_(MD5|BLOWFISH|S(HA(256|512)|TD_DES|ALT_LENGTH)|EXT_DES)|NCYSTR|EDITS_(G(ROUP|ENERAL)|MODULES|SAPI|DOCS|QA|FULLPAGE|ALL))|HAR_MAX|O(NNECTION_(NORMAL|TIMEOUT|ABORTED)|DESET|UNT_(RECURSIVE|NORMAL))|URRENCY_SYMBOL|ASE_(UPPER|LOWER))|__COMPILER_HALT_OFFSET__|T(HOUS(EP|ANDS_SEP)|_FMT(_AMPM)?)|IN(T_(CURR_SYMBOL|FRAC_DIGITS)|I_(S(YSTEM|CANNER_(RAW|NORMAL))|USER|PERDIR|ALL)|F(O_(GENERAL|MODULES|C(REDITS|ONFIGURATION)|ENVIRONMENT|VARIABLES|LICENSE|ALL))?)|D(_(T_FMT|FMT)|IRECTORY_SEPARATOR|ECIMAL_POINT|A(Y_(1|7|2|3|4|5|6)|TE_(R(SS|FC(1(123|036)|2822|8(22|50)|3339))|COOKIE|ISO8601|W3C|ATOM)))|UPLOAD_ERR_(NO_(TMP_DIR|FILE)|CANT_WRITE|INI_SIZE|OK|PARTIAL|EXTENSION|FORM_SIZE)|P(M_STR|_(S(IGN_POSN|EP_BY_SPACE)|CS_PRECEDES)|OSITIVE_SIGN|ATH(_SEPARATOR|INFO_(BASENAME|DIRNAME|EXTENSION|FILENAME)))|E(RA(_(YEAR|T_FMT|D_(T_FMT|FMT)))?|XTR_(REFS|SKIP|IF_EXISTS|OVERWRITE|PREFIX_(SAME|I(NVALID|F_EXISTS)|ALL))|NT_(NOQUOTES|COMPAT|IGNORE|QUOTES))|FRAC_DIGITS|L(C_(M(ONETARY|ESSAGES)|NUMERIC|C(TYPE|OLLATE)|TIME|ALL)|O(G_(MAIL|SYSLOG|N(O(TICE|WAIT)|DELAY|EWS)|C(R(IT|ON)|ONS)|INFO|ODELAY|D(EBUG|AEMON)|U(SER|UCP)|P(ID|ERROR)|E(RR|MERG)|KERN|WARNING|L(OCAL(1|7|2|3|4|5|0|6)|PR)|A(UTH(PRIV)?|LERT))|CK_(SH|NB|UN|EX)))|A(M_STR|B(MON_(1(1|2|0)?|7|2|8|3|9|4|5|6)|DAY_(1|7|2|3|4|5|6))|SSERT_(BAIL|CALLBACK|QUIET_EVAL|WARNING|ACTIVE)|LT_DIGITS))\b</string>
							<key>name</key>
							<string>support.constant.std.php</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.inheritance.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?x)
								(\\)?\b
								(GLOB_(MARK|BRACE|NO(SORT|CHECK|ESCAPE)|ONLYDIR|ERR|AVAILABLE_FLAGS)|XML_(SAX_IMPL|HTML_DOCUMENT_NODE|N(OTATION_NODE|AMESPACE_DECL_NODE)|C(OMMENT_NODE|DATA_SECTION_NODE)|TEXT_NODE|OPTION_(SKIP_(TAGSTART|WHITE)|CASE_FOLDING|TARGET_ENCODING)|D(TD_NODE|OCUMENT_(NODE|TYPE_NODE|FRAG_NODE))|PI_NODE|E(RROR_(RECURSIVE_ENTITY_REF|MISPLACED_XML_PI|B(INARY_ENTITY_REF|AD_CHAR_REF)|SYNTAX|NO(NE|_(MEMORY|ELEMENTS))|TAG_MISMATCH|IN(CORRECT_ENCODING|VALID_TOKEN)|DUPLICATE_ATTRIBUTE|UN(CLOSED_(CDATA_SECTION|TOKEN)|DEFINED_ENTITY|KNOWN_ENCODING)|JUNK_AFTER_DOC_ELEMENT|PAR(TIAL_CHAR|AM_ENTITY_REF)|EXTERNAL_ENTITY_HANDLING|A(SYNC_ENTITY|TTRIBUTE_EXTERNAL_ENTITY_REF))|NTITY_(REF_NODE|NODE|DECL_NODE)|LEMENT_(NODE|DECL_NODE))|LOCAL_NAMESPACE|ATTRIBUTE_(N(MTOKEN(S)?|O(TATION|DE))|CDATA|ID(REF(S)?)?|DECL_NODE|EN(TITY|UMERATION)))|M(HASH_(RIPEMD(1(28|60)|256|320)|GOST|MD(2|4|5)|S(HA(1|2(24|56)|384|512)|NEFRU256)|HAVAL(1(28|92|60)|2(24|56))|CRC32(B)?|TIGER(1(28|60))?|WHIRLPOOL|ADLER32)|YSQL(_(BOTH|NUM|CLIENT_(SSL|COMPRESS|I(GNORE_SPACE|NTERACTIVE))|ASSOC)|I_(RE(PORT_(STRICT|INDEX|OFF|ERROR|ALL)|FRESH_(GRANT|MASTER|BACKUP_LOG|S(TATUS|LAVE)|HOSTS|T(HREADS|ABLES)|LOG)|AD_DEFAULT_(GROUP|FILE))|GROUP_FLAG|MULTIPLE_KEY_FLAG|B(INARY_FLAG|OTH|LOB_FLAG)|S(T(MT_ATTR_(CURSOR_TYPE|UPDATE_MAX_LENGTH|PREFETCH_ROWS)|ORE_RESULT)|E(RVER_QUERY_(NO_(GOOD_INDEX_USED|INDEX_USED)|WAS_SLOW)|T_(CHARSET_NAME|FLAG)))|N(O(_D(EFAULT_VALUE_FLAG|ATA)|T_NULL_FLAG)|UM(_FLAG)?)|C(URSOR_TYPE_(READ_ONLY|SCROLLABLE|NO_CURSOR|FOR_UPDATE)|LIENT_(SSL|NO_SCHEMA|COMPRESS|I(GNORE_SPACE|NTERACTIVE)|FOUND_ROWS))|T(YPE_(GEOMETRY|MEDIUM_BLOB|B(IT|LOB)|S(HORT|TRING|ET)|YEAR|N(ULL|EWD(ECIMAL|ATE))|CHAR|TI(ME(STAMP)?|NY(_BLOB)?)|INT(24|ERVAL)|D(OUBLE|ECIMAL|ATE(TIME)?)|ENUM|VAR_STRING|FLOAT|LONG(_BLOB|LONG)?)|IMESTAMP_FLAG)|INIT_COMMAND|ZEROFILL_FLAG|O(N_UPDATE_NOW_FLAG|PT_(NET_(READ_BUFFER_SIZE|CMD_BUFFER_SIZE)|CONNECT_TIMEOUT|INT_AND_FLOAT_NATIVE|LOCAL_INFILE))|D(EBUG_TRACE_ENABLED|ATA_TRUNCATED)|U(SE_RESULT|N(SIGNED_FLAG|IQUE_KEY_FLAG))|P(RI_KEY_FLAG|ART_KEY_FLAG)|ENUM_FLAG|A(S(SOC|YNC)|UTO_INCREMENT_FLAG)))|CRYPT_(R(C(2|6)|IJNDAEL_(1(28|92)|256)|AND)|GOST|XTEA|M(ODE_(STREAM|NOFB|C(BC|FB)|OFB|ECB)|ARS)|BLOWFISH(_COMPAT)?|S(ERPENT|KIPJACK|AFER(128|PLUS|64))|C(RYPT|AST_(128|256))|T(RIPLEDES|HREEWAY|WOFISH)|IDEA|3DES|
									DE(S|CRYPT|V_(RANDOM|URANDOM))|PANAMA|EN(CRYPT|IGNA)|WAKE|LOKI97|ARCFOUR(_IV)?))|S(TREAM_(REPORT_ERRORS|M(UST_SEEK|KDIR_RECURSIVE)|BUFFER_(NONE|FULL|LINE)|S(HUT_(RD(WR)?|WR)|OCK_(R(DM|AW)|S(TREAM|EQPACKET)|DGRAM)|ERVER_(BIND|LISTEN))|NOTIFY_(RE(SOLVE|DIRECTED)|MIME_TYPE_IS|SEVERITY_(INFO|ERR|WARN)|CO(MPLETED|NNECT)|PROGRESS|F(ILE_SIZE_IS|AILURE)|AUTH_RE(SULT|QUIRED))|C(RYPTO_METHOD_(SSLv(2(_(SERVER|CLIENT)|3_(SERVER|CLIENT))|3_(SERVER|CLIENT))|TLS_(SERVER|CLIENT))|LIENT_(CONNECT|PERSISTENT|ASYNC_CONNECT)|AST_(FOR_SELECT|AS_STREAM))|I(GNORE_URL|S_URL|PPROTO_(RAW|TCP|I(CMP|P)|UDP))|O(OB|PTION_(READ_(BUFFER|TIMEOUT)|BLOCKING|WRITE_BUFFER))|U(RL_STAT_(QUIET|LINK)|SE_PATH)|P(EEK|F_(INET(6)?|UNIX))|ENFORCE_SAFE_MODE|FILTER_(READ|WRITE|ALL))|UNFUNCS_RET_(STRING|TIMESTAMP|DOUBLE)|QLITE(_(R(OW|EADONLY)|MIS(MATCH|USE)|B(OTH|USY)|SCHEMA|N(O(MEM|T(FOUND|ADB)|LFS)|UM)|C(O(RRUPT|NSTRAINT)|ANTOPEN)|TOOBIG|I(NTER(RUPT|NAL)|OERR)|OK|DONE|P(ROTOCOL|ERM)|E(RROR|MPTY)|F(ORMAT|ULL)|LOCKED|A(BORT|SSOC|UTH))|3_(B(OTH|LOB)|NU(M|LL)|TEXT|INTEGER|OPEN_(READ(ONLY|WRITE)|CREATE)|FLOAT|ASSOC)))|CURL(M(SG_DONE|_(BAD_(HANDLE|EASY_HANDLE)|CALL_MULTI_PERFORM|INTERNAL_ERROR|O(UT_OF_MEMORY|K)))|SSH_AUTH_(HOST|NONE|DEFAULT|P(UBLICKEY|ASSWORD)|KEYBOARD)|CLOSEPOLICY_(SLOWEST|CALLBACK|OLDEST|LEAST_(RECENTLY_USED|TRAFFIC))|_(HTTP_VERSION_(1_(1|0)|NONE)|NETRC_(REQUIRED|IGNORED|OPTIONAL)|TIMECOND_(IF(MODSINCE|UNMODSINCE)|LASTMOD)|IPRESOLVE_(V(4|6)|WHATEVER)|VERSION_(SSL|IPV6|KERBEROS4|LIBZ))|INFO_(RE(DIRECT_(COUNT|TIME)|QUEST_SIZE)|S(SL_VERIFYRESULT|TARTTRANSFER_TIME|IZE_(DOWNLOAD|UPLOAD)|PEED_(DOWNLOAD|UPLOAD))|H(TTP_CODE|EADER_(SIZE|OUT))|NAMELOOKUP_TIME|C(ON(NECT_TIME|TENT_(TYPE|LENGTH_(DOWNLOAD|UPLOAD)))|ERTINFO)|TOTAL_TIME|PR(IVATE|ETRANSFER_TIME)|EFFECTIVE_URL|FILETIME)|OPT_(R(E(SUME_FROM|TURNTRANSFER|DIR_PROTOCOLS|FERER|AD(DATA|FUNCTION))|AN(GE|DOM_FILE))|MAX(REDIRS|CONNECTS)|B(INARYTRANSFER|UFFERSIZE)|S(S(H_(HOST_PUBLIC_KEY_MD5|P(RIVATE_KEYFILE|UBLIC_KEYFILE)|AUTH_TYPES)|L(CERT(TYPE|PASSWD)?|_(CIPHER_LIST|VERIFY(HOST|PEER))|ENGINE(_DEFAULT)?|VERSION|KEY(TYPE|PASSWD)?))|TDERR)|H(TTP(GET|HEADER|200ALIASES|_VERSION|PROXYTUNNEL|AUTH)|EADER(FUNCTION)?)
									|N(O(BODY|SIGNAL|PROGRESS)|ETRC)|C(RLF|O(NNECTTIMEOUT(_MS)?|OKIE(SESSION|JAR|FILE)?)|USTOMREQUEST|ERTINFO|LOSEPOLICY|A(INFO|PATH))|T(RANSFERTEXT|CP_NODELAY|IME(CONDITION|OUT(_MS)?|VALUE))|I(N(TERFACE|FILE(SIZE)?)|PRESOLVE)|DNS_(CACHE_TIMEOUT|USE_GLOBAL_CACHE)|U(RL|SER(PWD|AGENT)|NRESTRICTED_AUTH|PLOAD)|P(R(IVATE|O(GRESSFUNCTION|XY(TYPE|USERPWD|PORT|AUTH)?|TOCOLS))|O(RT|ST(REDIR|QUOTE|FIELDS)?)|UT)|E(GDSOCKET|NCODING)|VERBOSE|K(RB4LEVEL|EYPASSWD)|QUOTE|F(RESH_CONNECT|TP(SSLAUTH|_(S(SL|KIP_PASV_IP)|CREATE_MISSING_DIRS|USE_EP(RT|SV)|FILEMETHOD)|PORT|LISTONLY|APPEND)|ILE(TIME)?|O(RBID_REUSE|LLOWLOCATION)|AILONERROR)|WRITE(HEADER|FUNCTION)|LOW_SPEED_(TIME|LIMIT)|AUTOREFERER)|PRO(XY_(SOCKS(4|5)|HTTP)|TO_(S(CP|FTP)|HTTP(S)?|T(ELNET|FTP)|DICT|F(TP(S)?|ILE)|LDAP(S)?|ALL))|E_(RE(CV_ERROR|AD_ERROR)|GOT_NOTHING|MALFORMAT_USER|BAD_(C(ONTENT_ENCODING|ALLING_ORDER)|PASSWORD_ENTERED|FUNCTION_ARGUMENT)|S(S(H|L_(C(IPHER|ONNECT_ERROR|ERTPROBLEM|ACERT)|PEER_CERTIFICATE|ENGINE_(SETFAILED|NOTFOUND)))|HARE_IN_USE|END_ERROR)|HTTP_(RANGE_ERROR|NOT_FOUND|PO(RT_FAILED|ST_ERROR))|COULDNT_(RESOLVE_(HOST|PROXY)|CONNECT)|T(OO_MANY_REDIRECTS|ELNET_OPTION_SYNTAX)|O(BSOLETE|UT_OF_MEMORY|PERATION_TIMEOUTED|K)|U(RL_MALFORMAT(_USER)?|N(SUPPORTED_PROTOCOL|KNOWN_TELNET_OPTION))|PARTIAL_FILE|F(TP_(BAD_DOWNLOAD_RESUME|SSL_FAILED|C(OULDNT_(RETR_FILE|GET_SIZE|S(TOR_FILE|ET_(BINARY|ASCII))|USE_REST)|ANT_(RECONNECT|GET_HOST))|USER_PASSWORD_INCORRECT|PORT_FAILED|QUOTE_ERROR|W(RITE_ERROR|EIRD_(SERVER_REPLY|227_FORMAT|USER_REPLY|PAS(S_REPLY|V_REPLY)))|ACCESS_DENIED)|ILE(SIZE_EXCEEDED|_COULDNT_READ_FILE)|UNCTION_NOT_FOUND|AILED_INIT)|WRITE_ERROR|L(IBRARY_NOT_FOUND|DAP_(SEARCH_FAILED|CANNOT_BIND|INVALID_URL))|ABORTED_BY_CALLBACK)|VERSION_NOW|FTP(METHOD_(MULTICWD|SINGLECWD|NOCWD)|SSL_(NONE|CONTROL|TRY|ALL)|AUTH_(SSL|TLS|DEFAULT))|AUTH_(GSSNEGOTIATE|BASIC|NTLM|DIGEST|ANY(SAFE)?))|I(MAGETYPE_(GIF|XBM|BMP|SWF|COUNT|TIFF_(MM|II)|I(CO|FF)|UNKNOWN|J(B2|P(X|2|C|EG(2000)?))|P(SD|NG)|WBMP)|NPUT_(REQUEST|GET|SE(RVER|SSION)|COOKIE|POST|ENV)|CONV_(MIME_DECODE_(STRICT|CONTINUE_ON_ERROR)|IMPL|VERSION))|D(NS_(MX|S(RV|OA)|HINFO|N(S|APTR)|CNAME|TXT|PTR|A(NY|LL|AAA|6)?)|OM(STRING_SIZE_ERR|_(SYNTAX_ERR|HIERARCHY_REQUEST_ERR|N(O(_(MODIFICATION_ALLOWED_ERR|DATA_ALLOWED_ERR)|T_(SUPPORTED_ERR|FOUND_ERR))|AMESPACE_ERR)|IN(DEX_SIZE_ERR|USE_ATTRIBUTE_ERR|VALID_(MODIFICATION_ERR|STATE_ERR|CHARACTER_ERR|ACCESS_ERR))|PHP_ERR|VALIDATION_ERR|WRONG_DOCUMENT_ERR)))|JSON_(HEX_(TAG|QUOT|A(MP|POS))|NUMERIC_CHECK|ERROR_(S(YNTAX|TATE_MISMATCH)|NONE|CTRL_CHAR|DEPTH|UTF8)|FORCE_OBJECT)|P(REG_(RECURSION_LIMIT_ERROR|GREP_INVERT|BA(CKTRACK_LIMIT_ERROR|D_UTF8_(OFFSET_ERROR|ERROR))|S(PLIT_(NO_EMPTY|OFFSET_CAPTURE|DELIM_CAPTURE)|ET_ORDER)|NO_ERROR|INTERNAL_ERROR|OFFSET_CAPTURE|PATTERN_ORDER)|SFS_(PASS_ON|ERR_FATAL|F(EED_ME|LAG_(NORMAL|FLUSH_(CLOSE|INC))))|CRE_VERSION|OSIX_(R_OK|X_OK|S_IF(REG|BLK|SOCK|CHR|IFO)|F_OK|W_OK))|F(NM_(NOESCAPE|CASEFOLD|P(ERIOD|ATHNAME))|IL(TER_(REQUIRE_(SCALAR|ARRAY)|SANITIZE_(MAGIC_QUOTES|S(TRI(NG|PPED)|PECIAL_CHARS)|NUMBER_(INT|FLOAT)|URL|E(MAIL|NCODED)|FULL_SPECIAL_CHARS)|NULL_ON_FAILURE|CALLBACK|DEFAULT|UNSAFE_RAW|VALIDATE_(REGEXP|BOOLEAN|I(NT|P)|URL|EMAIL|FLOAT)|F(ORCE_ARRAY|LAG_(S(CHEME_REQUIRED|TRIP_(BACKTICK|HIGH|LOW))|HOST_REQUIRED|NO(NE|_(RES_RANGE|PRIV_RANGE|ENCODE_QUOTES))|IPV(4|6)|PATH_REQUIRED|E(MPTY_STRING_NULL|NCODE_(HIGH|LOW|AMP))|QUERY_REQUIRED|ALLOW_(SCIENTIFIC|HEX|THOUSAND|OCTAL|FRACTION))))|E(_(BINARY|SKIP_EMPTY_LINES|NO_DEFAULT_CONTEXT|TEXT|IGNORE_NEW_LINES|USE_INCLUDE_PATH|APPEND)|INFO_(RAW|MIME(_(TYPE|ENCODING))?|SYMLINK|NONE|CONTINUE|DEVICES|PRESERVE_ATIME)))|ORCE_(GZIP|DEFLATE))|LIBXML_(XINCLUDE|N(SCLEAN|O(XMLDECL|BLANKS|NET|CDATA|E(RROR|MPTYTAG|NT)|WARNING))|COMPACT|D(TD(VALID|LOAD|ATTR)|OTTED_VERSION)|PARSEHUGE|ERR_(NONE|ERROR|FATAL|WARNING)|VERSION|LOADED_VERSION))
							\b
							</string>
							<key>name</key>
							<string>support.constant.ext.php</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.inheritance.php</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(\\)?\bT_(RE(TURN|QUIRE(_ONCE)?)|G(OTO|LOBAL)|XOR_EQUAL|M(INUS_EQUAL|OD_EQUAL|UL_EQUAL|ETHOD_C|L_COMMENT)|B(REAK|OOL(_CAST|EAN_(OR|AND))|AD_CHARACTER)|S(R(_EQUAL)?|T(RING(_(CAST|VARNAME))?|A(RT_HEREDOC|TIC))|WITCH|L(_EQUAL)?)|HALT_COMPILER|N(S_(SEPARATOR|C)|UM_STRING|EW|AMESPACE)|C(HARACTER|O(MMENT|N(ST(ANT_ENCAPSED_STRING)?|CAT_EQUAL|TINUE))|URLY_OPEN|L(O(SE_TAG|NE)|ASS(_C)?)|A(SE|TCH))|T(RY|HROW)|I(MPLEMENTS|S(SET|_(GREATER_OR_EQUAL|SMALLER_OR_EQUAL|NOT_(IDENTICAL|EQUAL)|IDENTICAL|EQUAL))|N(STANCEOF|C(LUDE(_ONCE)?)?|T(_CAST|ERFACE)|LINE_HTML)|F)|O(R_EQUAL|BJECT_(CAST|OPERATOR)|PEN_TAG(_WITH_ECHO)?|LD_FUNCTION)|D(NUMBER|I(R|V_EQUAL)|O(C_COMMENT|UBLE_(C(OLON|AST)|ARROW)|LLAR_OPEN_CURLY_BRACES)?|E(C(LARE)?|FAULT))|U(SE|NSET(_CAST)?)|P(R(I(NT|VATE)|OTECTED)|UBLIC|LUS_EQUAL|AAMAYIM_NEKUDOTAYIM)|E(X(TENDS|IT)|MPTY|N(CAPSED_AND_WHITESPACE|D(SWITCH|_HEREDOC|IF|DECLARE|FOR(EACH)?|WHILE))|CHO|VAL|LSE(IF)?)|VAR(IABLE)?|F(I(NAL|LE)|OR(EACH)?|UNC(_C|TION))|WHI(TESPACE|LE)|L(NUMBER|I(ST|NE)|OGICAL_(XOR|OR|AND))|A(RRAY(_CAST)?|BSTRACT|S|ND_EQUAL))\b</string>
							<key>name</key>
							<string>support.constant.parser-token.php</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>In PHP, any identifier which is not a variable is taken to be a constant.
        				However, if there is no constant defined with the given name then a notice
        				is generated and the constant is assumed to have the value of its name.</string>
							<key>match</key>
							<string>[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*</string>
							<key>name</key>
							<string>constant.other.php</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function-arguments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix)
						(?:                                                  # Optional
						    (\?)?
						    (?: (array|bool|float|int|string|mixed)          # scalar-type
						      | (callable|iterable)                          # base-type-declaration
						      | ([a-z_0-9\\]*[a-z_][a-z_0-9]*)
						    )
						    \s+
						)?
						(?:(&amp;)\s*)?                                      # Reference
						((\$+)[a-z_\x{7f}-\x{ff}][a-z0-9_\x{7f}-\x{ff}]*)    # Variable name
					</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.nullable.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.$2.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.$3.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#class-name</string>
								</dict>
							</array>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=,|\)|/[/*]|\#)</string>
					<key>name</key>
					<string>meta.function.argment.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\s*(=)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.php</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=,|\)|/[/*]|\#)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#parameter-default-types</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>\S</string>
							<key>name</key>
							<string>invalid.illegal.character-not-allowed-here.php</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>function-call</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(?=\\?[a-z_0-9\\]+\\[a-z_][a-z0-9_]*\s*\()</string>
					<key>comment</key>
					<string>Functions in a user-defined namespace (overrides any built-ins)</string>
					<key>end</key>
					<string>(?=\s*\()</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#user-function-call</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(print|echo)\b</string>
					<key>name</key>
					<string>support.function.construct.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(\\)?(?=\b[a-z_][a-z_0-9]*\s*\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.inheritance.php</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Root namespace function calls (built-in or user)</string>
					<key>end</key>
					<string>(?=\s*\()</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(isset|unset|e(val|mpty)|list)(?=\s*\()</string>
							<key>name</key>
							<string>support.function.construct.php</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#support</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#user-function-call</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>heredoc</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=&lt;&lt;&lt;\s*("?)([a-zA-Z_]+[a-zA-Z0-9_]*)(\1)\s*$)</string>
					<key>end</key>
					<string>(?!\G)</string>
					<key>injections</key>
					<dict>
						<key>*</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#interpolation</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>name</key>
					<string>string.unquoted.heredoc.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#heredoc_interior</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=&lt;&lt;&lt;\s*('?)([a-zA-Z_]+[a-zA-Z0-9_]*)(\1)\s*$)</string>
					<key>end</key>
					<string>(?!\G)</string>
					<key>name</key>
					<string>string.unquoted.heredoc.nowdoc.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#heredoc_interior</string>
						</dict>
					</array>
				</dict>
			</array>
			<key>repository</key>
			<dict>
				<key>heredoc_interior</key>
				<dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(&lt;&lt;&lt;)\s*(['"]?)(HTML)(\2)\s*$\n?</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.begin.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.php</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>text.html</string>
							<key>end</key>
							<string>^\s*(\3)\b</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.end.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.embedded.html</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>text.html.basic</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(&lt;&lt;&lt;)\s*(['"]?)(XML)(\2)\s*$\n?</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.begin.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.php</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>text.xml</string>
							<key>end</key>
							<string>^\s*(\3)\b</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.end.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.embedded.xml</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>text.xml</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(&lt;&lt;&lt;)\s*(['"]?)(SQL)(\2)\s*$\n?</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.begin.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.php</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>source.sql</string>
							<key>end</key>
							<string>^\s*(\3)\b</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.end.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.embedded.sql</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.sql</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(&lt;&lt;&lt;)\s*(['"]?)(JAVASCRIPT)(\2)\s*$\n?</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.begin.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.php</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>source.js</string>
							<key>end</key>
							<string>^\s*(\3)\b</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.end.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.embedded.js</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.js</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(&lt;&lt;&lt;)\s*(['"]?)(JSON)(\2)\s*$\n?</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.begin.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.php</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>source.json</string>
							<key>end</key>
							<string>^\s*(\3)\b</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.end.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.embedded.json</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.json</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(&lt;&lt;&lt;)\s*(['"]?)(CSS)(\2)\s*$\n?</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.begin.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.php</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>source.css</string>
							<key>end</key>
							<string>^\s*(\3)\b</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.end.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.embedded.css</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.css</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(&lt;&lt;&lt;)\s*(['"]?)(REGEX)(\2)\s*$\n?</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.begin.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.php</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>string.regexp.heredoc.php</string>
							<key>end</key>
							<string>^\s*(\3)\b</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.section.embedded.end.php</string>
								</dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>Escaped from the regexp – there can also be 2 backslashes (since 1 will escape the first)</string>
									<key>match</key>
									<string>(\\){1,2}[.$^\[\]{}]</string>
									<key>name</key>
									<string>constant.character.escape.regex.php</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.arbitrary-repitition.php</string>
										</dict>
										<key>3</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.arbitrary-repitition.php</string>
										</dict>
									</dict>
									<key>match</key>
									<string>(\{)\d+(,\d+)?(\})</string>
									<key>name</key>
									<string>string.regexp.arbitrary-repitition.php</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\[(?:\^?\])?</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.character-class.php</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\]</string>
									<key>name</key>
									<string>string.regexp.character-class.php</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>\\[\\'\[\]]</string>
											<key>name</key>
											<string>constant.character.escape.php</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>match</key>
									<string>[$^+*]</string>
									<key>name</key>
									<string>keyword.operator.regexp.php</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?&lt;=^|\s)(#)\s(?=[[a-zA-Z0-9,. \t?!-][^\x{00}-\x{7F}]]*$)</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.comment.php</string>
										</dict>
									</dict>
									<key>comment</key>
									<string>We are restrictive in what we allow to go after the comment character to avoid false positives, since the availability of comments depend on regexp flags.</string>
									<key>end</key>
									<string>$\n?</string>
									<key>endCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.comment.php</string>
										</dict>
									</dict>
									<key>name</key>
									<string>comment.line.number-sign.php</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(&lt;&lt;&lt;)\s*(['"]?)([a-zA-Z_]+[a-zA-Z0-9_]*)(\2)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.php</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
							<key>end</key>
							<string>^\s*(\3)\b</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.heredoc.php</string>
								</dict>
							</dict>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>instantiation</key>
		<dict>
			<key>begin</key>
			<string>(?i)(new)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.new.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?i)(?=[^$a-z0-9_\\])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(parent|static|self)(?=[^a-z0-9_])</string>
					<key>name</key>
					<string>storage.type.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-name</string>
				</dict>
			</array>
		</dict>
		<key>interpolation</key>
		<dict>
			<key>comment</key>
			<string>http://www.php.net/manual/en/language.types.string.php#language.types.string.parsing</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[0-7]{1,3}</string>
					<key>name</key>
					<string>constant.numeric.octal.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\x[0-9A-Fa-f]{1,2}</string>
					<key>name</key>
					<string>constant.numeric.hex.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\[enrt\\\$\"]</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\{)(?=\$.*?\})</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-name</string>
				</dict>
			</array>
		</dict>
		<key>invoke-call</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.php</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.php</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i)(\$+)([a-z_][a-z_0-9]*)(?=\s*\()</string>
			<key>name</key>
			<string>meta.function-call.invoke.php</string>
		</dict>
		<key>language</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\{</string>
					<key>name</key>
					<string>punctuation.section.scope.begin.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\}</string>
					<key>name</key>
					<string>punctuation.section.scope.end.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(interface)\s+([a-z0-9_]+)\s*(extends)?\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.interface.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.interface.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.extends.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?:[a-zA-Z0-9_]+\s*,\s*)*)([a-zA-Z0-9_]+)?\s*(?:(?=\{)|$)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>[a-zA-Z0-9_]+</string>
									<key>name</key>
									<string>entity.other.inherited-class.php</string>
								</dict>
								<dict>
									<key>match</key>
									<string>,</string>
									<key>name</key>
									<string>punctuation.separator.classes.php</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.other.inherited-class.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.interface.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#namespace</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?:^|(?&lt;=&lt;\?php))\s*(namespace)\b\s+(?=([a-z0-9_\\]+\s*($|[;{]|(\/[\/*])))|$)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.namespace.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>entity.name.type.namespace.php</string>
					<key>end</key>
					<string>(?i)(?=\s*$|[^a-z0-9_\\])</string>
					<key>name</key>
					<string>meta.namespace.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\</string>
							<key>name</key>
							<string>punctuation.separator.inheritance.php</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\s*\b(use)\s+(?:((const)|(function))\s+)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.use.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.type.const.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=;|(?:^\s*$))</string>
					<key>name</key>
					<string>meta.use.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\s*(?=[a-z_0-9\\])</string>
							<key>end</key>
							<string>(?xi)(?:
    			                (?:\s*(as)\b\s*([a-z_0-9]*)\s*(?=,|;|$))
    			                |(?=,|;|$)
    			            )</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.use-as.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>support.other.namespace.use-as.php</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#class-builtin</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?i)\s*(?=[\\a-z_0-9])</string>
									<key>end</key>
									<string>$|(?=[\s,;])</string>
									<key>name</key>
									<string>support.other.namespace.use.php</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>\\</string>
											<key>name</key>
											<string>punctuation.separator.inheritance.php</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>\s*,\s*</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(trait)\s+([a-zA-Z0-9_]+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.trait.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.trait.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\{)</string>
					<key>name</key>
					<string>meta.trait.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(abstract|final)?\s*(class)\s+([a-z0-9_]+)\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.abstract.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.class.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[;{])</string>
					<key>name</key>
					<string>meta.class.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comments</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(extends)\s+</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.extends.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.other.inherited-class.php</string>
							<key>end</key>
							<string>(?i)(?=[^a-z_0-9\\])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(?i)(?=\\?[a-z_0-9]+\\)</string>
									<key>end</key>
									<string>(?i)([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\])</string>
									<key>endCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>entity.other.inherited-class.php</string>
										</dict>
									</dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#namespace</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#class-builtin</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#namespace</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?i)[a-z_][a-z_0-9]*</string>
									<key>name</key>
									<string>entity.other.inherited-class.php</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(implements)\s+</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.implements.php</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?i)(?=[;{])</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comments</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?i)(?=[a-z0-9_\\]+)</string>
									<key>contentName</key>
									<string>meta.other.inherited-class.php</string>
									<key>end</key>
									<string>(?i)(?:\s*(?:,|(?=[^a-z0-9_\\\s]))\s*)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>begin</key>
											<string>(?i)(?=\\?[a-z_0-9]+\\)</string>
											<key>end</key>
											<string>(?i)([a-z_][a-z_0-9]*)?(?=[^a-z0-9_\\])</string>
											<key>endCaptures</key>
											<dict>
												<key>1</key>
												<dict>
													<key>name</key>
													<string>entity.other.inherited-class.php</string>
												</dict>
											</dict>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#namespace</string>
												</dict>
											</array>
										</dict>
										<dict>
											<key>include</key>
											<string>#class-builtin</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#namespace</string>
										</dict>
										<dict>
											<key>match</key>
											<string>(?i)[a-z_][a-z_0-9]*</string>
											<key>name</key>
											<string>entity.other.inherited-class.php</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\s*\b((break|c(ase|ontinue)|d(e(clare|fault)|ie|o)|e(lse(if)?|nd(declare|for(each)?|if|switch|while)|xit)|for(each)?|if|match|return|switch|use|while|yield))\b</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b((?:require|include)(?:_once)?)\b\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.import.include.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\s|;|$)</string>
					<key>name</key>
					<string>meta.include.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(catch)\b\s*\(\s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.exception.catch.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>([A-Za-z_][A-Za-z_0-9]*)\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)?\s*\)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.exception.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.catch.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#namespace</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(catch|try|throw|exception|finally)\b</string>
					<key>name</key>
					<string>keyword.control.exception.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(function)\s*(&amp;\s*)?(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\{</string>
					<key>name</key>
					<string>meta.function.closure.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.begin.php</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.function.arguments.php</string>
							<key>end</key>
							<string>(\))</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.end.php</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#function-arguments</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(use)\s*(\()</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.function.use.php</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.begin.php</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.parameters.end.php</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>storage.modifier.reference.php</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>variable.other.php</string>
										</dict>
										<key>3</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.variable.php</string>
										</dict>
									</dict>
									<key>match</key>
									<string>(?:\s*(&amp;))?\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)\s*(?=,|\))</string>
									<key>name</key>
									<string>meta.function.closure.use.php</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)\s*
					    ((?:(?:final|abstract|public|private|protected|static)\s+)*)
				        (function)
				        (?:\s+|(\s*&amp;\s*))
				        (?:
				            (__(?:call|construct|debugInfo|destruct|get|set|isset|unset|tostring|clone|set_state|sleep|wakeup|autoload|invoke|callStatic))
				            |([a-zA-Z0-9_]+)
				        )
				        \s*
				        (\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>final|abstract|public|private|protected|static</string>
									<key>name</key>
									<string>storage.modifier.php</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>support.function.magic.php</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.php</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.php</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function.arguments.php</string>
					<key>end</key>
					<string>(?ix)
						(\))                                            # Close arguments
						(?:                                             # Optional return type
						    \s*(:)\s*
						    (\?)?
						    (?:
						        (array|bool|float|int|string|mixed)     # scalar-type
						      | (callable|iterable)                     # base-type-declaration
						      | (void)
						      | (self|parent|static)                    # late static binding
						      | ([a-z_0-9\\]*[a-z_][a-z_0-9]*)          # qualified-name
						    )
						)?
					</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.return-type.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.nullable.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.$4.php</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.$5.php</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>storage.type.void.php</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>storage.type.$7.php</string>
						</dict>
						<key>8</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#class-name</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#function-arguments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#invoke-call</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?xi)\s*(?=
				        [a-z_0-9$\\]+(::)
                        (?:
        				    ([a-z_][a-z_0-9]*)\s*\(
        				    |
        				    ((\$+)[a-z_\x{7f}-\x{ff}][a-z0-9_\x{7f}-\x{ff}]*)
        				    |
        				    ([a-z_\x{7f}-\x{ff}][a-z0-9_\x{7f}-\x{ff}]*)
        				)?
				    )</string>
					<key>end</key>
					<string>(?x)(::)
                        (?:
        				    ([A-Za-z_][A-Za-z_0-9]*)\s*\(
        				    |
        				    ((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)
        				    |
        				    ([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)
        				)?</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.class.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.static.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.class.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.other.class.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(self|static|parent)\b</string>
							<key>name</key>
							<string>storage.type.php</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#class-name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable-name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.construct.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(array)(\()(\))</string>
					<key>name</key>
					<string>meta.array.empty.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(array)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.construct.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.array.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)\s*\(\s*(array|real|double|float|int(eger)?|bool(ean)?|string|object|binary|unset)\s*\)</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(array|real|double|float|int(eger)?|bool(ean)?|string|mixed|class|clone|var|function|interface|parent|self|object)\b</string>
					<key>name</key>
					<string>storage.type.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(global|abstract|const|extends|implements|final|p(r(ivate|otected)|ublic)|static)\b</string>
					<key>name</key>
					<string>storage.modifier.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#object</string>
				</dict>
				<dict>
					<key>match</key>
					<string>;</string>
					<key>name</key>
					<string>punctuation.terminator.expression.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#heredoc</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.=?</string>
					<key>name</key>
					<string>keyword.operator.string.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=&gt;</string>
					<key>name</key>
					<string>keyword.operator.key.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.reference.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?:(\=)(&amp;))|(&amp;(?=[$A-Za-z_]))</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(@)</string>
					<key>name</key>
					<string>keyword.operator.error-control.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-\-|\+\+)</string>
					<key>name</key>
					<string>keyword.operator.increment-decrement.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-|\+|\*|/|%)</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(!|&amp;&amp;|\|\|)|\b(and|or|xor|as)\b</string>
					<key>name</key>
					<string>keyword.operator.logical.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function-call</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;&lt;|&gt;&gt;|~|\^|&amp;|\|</string>
					<key>name</key>
					<string>keyword.operator.bitwise.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(===|==|!==|!=|&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;)</string>
					<key>name</key>
					<string>keyword.operator.comparison.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=</string>
					<key>name</key>
					<string>keyword.operator.assignment.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(instanceof)\b\s+(?=[\\$a-z_])</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.type.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=[^\\$A-Za-z_0-9])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#class-name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable-name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#instantiation</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.goto.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.other.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)(goto)\s+([a-z_][a-z_0-9]*)</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.goto-label.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)^\s*([a-z_][a-z_0-9]*)\s*:</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-backtick</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.array.begin.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.array.end.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
			</array>
		</dict>
		<key>namespace</key>
		<dict>
			<key>begin</key>
			<string>(?i)(?:(namespace)|[a-z0-9_]+)?(\\)(?=.*?([^a-z0-9_\\]|\z))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.language.namespace.php</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.inheritance.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?i)(?=[a-z0-9_]*([^a-z0-9_\\]|\z))</string>
			<key>name</key>
			<string>support.other.namespace.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.inheritance.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)(\\)</string>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b</string>
			<key>name</key>
			<string>constant.numeric.php</string>
		</dict>
		<key>object</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(-&gt;)(\$?\{)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.class.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.class.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.object.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.property.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)(\??-&gt;)
					(?:
					    ([A-Za-z_][A-Za-z_0-9]*)\s*\(
					    |
					    ((\$+)?[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)
					)?</string>
				</dict>
			</array>
		</dict>
		<key>parameter-default-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-backtick</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variables</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=&gt;</string>
					<key>name</key>
					<string>keyword.operator.key.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=</string>
					<key>name</key>
					<string>keyword.operator.assignment.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;(?=\s*\$)</string>
					<key>name</key>
					<string>storage.modifier.reference.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(array)\s*(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.construct.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.begin.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.array.end.php</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.array.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#parameter-default-types</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#instantiation</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?xi)\s*(?=
				        [a-z_0-9\\]+(::)
    				    ([a-z_\x{7f}-\x{ff}][a-z0-9_\x{7f}-\x{ff}]*)?
				    )</string>
					<key>end</key>
					<string>(?i)(::)([a-z_\x{7f}-\x{ff}][a-z0-9_\x{7f}-\x{ff}]*)?</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.class.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.other.class.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#class-name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#constants</string>
				</dict>
			</array>
		</dict>
		<key>php_doc</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>PHPDocumentor only recognises lines with an asterisk as the first non-whitespaces character</string>
					<key>match</key>
					<string>^(?!\s*\*).*$\n?</string>
					<key>name</key>
					<string>invalid.illegal.missing-asterisk.phpdoc.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.phpdoc.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.wrong-access-type.phpdoc.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^\s*\*\s*(@access)\s+((public|private|protected)|(.+))\s*$</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.phpdoc.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>markup.underline.link.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(@xlink)\s+(.+)\s*$</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\@(a(bstract|uthor)|c(ategory|opyright)|example|global|internal|li(cense|nk)|pa(ckage|ram)|return|s(ee|ince|tatic|ubpackage)|t(hrows|odo)|v(ar|ersion)|uses|deprecated|final|ignore)\b</string>
					<key>name</key>
					<string>keyword.other.phpdoc.php</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.phpdoc.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\{(@(link)).+?\}</string>
					<key>name</key>
					<string>meta.tag.inline.phpdoc.php</string>
				</dict>
			</array>
		</dict>
		<key>regex-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>(?x)"/ (?= (\\.|[^"/])++/[imsxeADSUXu]*" )</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/)([imsxeADSUXu]*)(")</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.regexp.double-quoted.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Escaped from the regexp – there can also be 2 backslashes (since 1 will escape the first)</string>
					<key>match</key>
					<string>(\\){1,2}[.$^\[\]{}]</string>
					<key>name</key>
					<string>constant.character.escape.regex.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arbitrary-repitition.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arbitrary-repitition.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\{)\d+(,\d+)?(\})</string>
					<key>name</key>
					<string>string.regexp.arbitrary-repitition.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[(?:\^?\])?</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>string.regexp.character-class.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>[$^+*]</string>
					<key>name</key>
					<string>keyword.operator.regexp.php</string>
				</dict>
			</array>
		</dict>
		<key>regex-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>(?x)'/ (?= ( \\ (?: \\ (?: \\ [\\']? | [^'] ) | . ) | [^'/] )++/[imsxeADSUXu]*' )</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/)([imsxeADSUXu]*)(')</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.regexp.single-quoted.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arbitrary-repitition.php</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arbitrary-repitition.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\{)\d+(,\d+)?(\})</string>
					<key>name</key>
					<string>string.regexp.arbitrary-repitition.php</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\[(?:\^?\])?</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>string.regexp.character-class.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#single_quote_regex_escape</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>[$^+*]</string>
					<key>name</key>
					<string>keyword.operator.regexp.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#single_quote_regex_escape</string>
				</dict>
			</array>
			<key>repository</key>
			<dict>
				<key>single_quote_regex_escape</key>
				<dict>
					<key>comment</key>
					<string>Support both PHP string and regex escaping</string>
					<key>match</key>
					<string>(?x) \\ (?: \\ (?: \\ [\\']? | [^'] ) | . )</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
			</dict>
		</dict>
		<key>sql-string-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>"\s*(?=(SELECT|INSERT|UPDATE|DELETE|CREATE|REPLACE|ALTER)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>source.sql.embedded.php</string>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.sql.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>#(\\"|[^"])*(?="|$\n?)</string>
					<key>name</key>
					<string>comment.line.number-sign.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>--(\\"|[^"])*(?="|$\n?)</string>
					<key>name</key>
					<string>comment.line.double-dash.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\[\\"`']</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>match</key>
					<string>'(?=((\\')|[^'"])*("|$))</string>
					<key>name</key>
					<string>string.quoted.single.unclosed.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>match</key>
					<string>`(?=((\\`)|[^`"])*("|$))</string>
					<key>name</key>
					<string>string.quoted.other.backtick.unclosed.sql</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>end</key>
					<string>'</string>
					<key>name</key>
					<string>string.quoted.single.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>`</string>
					<key>end</key>
					<string>`</string>
					<key>name</key>
					<string>string.quoted.other.backtick.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#interpolation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.sql</string>
				</dict>
			</array>
		</dict>
		<key>sql-string-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>'\s*(?=(SELECT|INSERT|UPDATE|DELETE|CREATE|REPLACE|ALTER)\b)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>source.sql.embedded.php</string>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.sql.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>#(\\'|[^'])*(?='|$\n?)</string>
					<key>name</key>
					<string>comment.line.number-sign.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>--(\\'|[^'])*(?='|$\n?)</string>
					<key>name</key>
					<string>comment.line.double-dash.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\[\\'`"]</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>match</key>
					<string>`(?=((\\`)|[^`'])*('|$))</string>
					<key>name</key>
					<string>string.quoted.other.backtick.unclosed.sql</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Unclosed strings must be captured to avoid them eating the remainder of the PHP script
					Sample case: $sql = "SELECT * FROM bar WHERE foo = '" . $variable . "'"</string>
					<key>match</key>
					<string>"(?=((\\")|[^"'])*('|$))</string>
					<key>name</key>
					<string>string.quoted.double.unclosed.sql</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.sql</string>
				</dict>
			</array>
		</dict>
		<key>string-backtick</key>
		<dict>
			<key>begin</key>
			<string>`</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>end</key>
			<string>`</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.interpolated.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
			</array>
		</dict>
		<key>string-double-quoted</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>This contentName is just to allow the usage of “select scope” to select the string contents first, then the string with quotes</string>
			<key>contentName</key>
			<string>meta.string-contents.quoted.double.php</string>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
			</array>
		</dict>
		<key>string-single-quoted</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.php</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.string-contents.quoted.single.php</string>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.php</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[\\']</string>
					<key>name</key>
					<string>constant.character.escape.php</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#regex-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sql-string-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-double-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#regex-single-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sql-string-single-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-single-quoted</string>
				</dict>
			</array>
		</dict>
		<key>support</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(virtual|apache_(note|get(env|_(modules|version))|setenv|lookup_uri|child_terminate|re(quest_headers|sponse_headers))|getallheaders)\b</string>
					<key>name</key>
					<string>support.function.apache.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bapcu_(add|c(a(s|che_info)|lear_cache)|de(c|lete)|inc|e(n(try|abled)|xists)|fetch|s(tore|ma_info)|key_info)\b</string>
					<key>name</key>
					<string>support.function.apcu.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(e(nd|ach|xtract)|k(ey|sort|rsort)|list|n(ext|at(sort|casesort))|prev|s(ort|huffle)|a(r(ray(_(m(ap|erge(_recursive)?|ultisort)|p(ad|op|ush|roduct)|s(um|hift|lice|earch|plice)|diff(_(key|u(key|assoc)|assoc))?|f(il(l(_keys)?|ter)|lip)|key(s|_(last|first|exists))|r(and|e(duce|place(_recursive)?|verse))|walk(_recursive)?|c(h(unk|ange_key_case)|o(lumn|mbine|unt_values))|u(diff(_(assoc|uassoc))?|n(ique|shift)|intersect(_(assoc|uassoc))?)|values|intersect(_(key|u(key|assoc)|assoc))?))?|sort)|sort)|c(o(unt|mpact)|urrent)|r(ange|eset|sort)|u(sort|asort|ksort)|in_array)\b</string>
					<key>name</key>
					<string>support.function.array.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bbc(add|div|m(od|ul)|pow(mod)?|s(ub|qrt|cale)|comp)\b</string>
					<key>name</key>
					<string>support.function.bc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bbz(open|read|c(lose|ompress)|err(no|or|str)|flush|write|decompress)\b</string>
					<key>name</key>
					<string>support.function.bzip2.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(cal_(info|to_jd|from_jd|days_in_month)|j(d(to(unix|french|j(ewish|ulian)|gregorian)|dayofweek|monthname)|ewishtojd|uliantojd)|unixtojd|frenchtojd|easter_da(te|ys)|gregoriantojd)\b</string>
					<key>name</key>
					<string>support.function.calendar.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bclasskit_(import|method_(add|copy|re(move|name|define)))\b</string>
					<key>name</key>
					<string>support.function.classkit.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(i(s_(a|subclass_of)|nterface_exists)|get_(c(lass(_(vars|methods))?|alled_class)|object_vars|parent_class|declared_(traits|classes|interfaces))|__autoload|class_(alias|exists)|trait_exists|method_exists|property_exists)\b</string>
					<key>name</key>
					<string>support.function.classobj.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(variant_(or|a(bs|dd|nd)|c(a(t|st)|mp)|d(iv|ate_(to_timestamp|from_timestamp))|eqv|fix|i(mp|nt|div)|m(od|ul)|n(eg|ot)|pow|s(et(_type)?|ub)|xor|round|get_type)|com_(event_sink|create_guid|load_typelib|message_pump|print_typeinfo|get_active_object))\b</string>
					<key>name</key>
					<string>support.function.com.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\brandom_(int|bytes)\b</string>
					<key>name</key>
					<string>support.function.csprng.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bctype_(al(num|pha)|cntrl|digit|graph|lower|p(rint|unct)|space|upper|xdigit)\b</string>
					<key>name</key>
					<string>support.function.ctype.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bcubrid_(get(_(c(harset|l(ass_name|ient_info))|autocommit|server_info|db_parameter|query_timeout))?|p(ut|repare|connect(_with_url)?)|bind|d(rop|isconnect)|f(etch|ree_result)|c(o(mmit|l(_(get|size)|umn_(names|types))|nnect(_with_url)?)|urrent_oid|lose_(prepare|request))|s(chema|e(q_(put|drop|insert)|t_(a(dd|utocommit)|d(rop|b_parameter)|query_timeout)))|e(xecute|rror_(msg|code(_facility)?))|lo(b(_(get|s(end|ize)|close|export)|2_(new|bind|read|s(eek(64)?|ize(64)?)|tell(64)?|close|write|export|import))|ck_(read|write))|version|n(um_(cols|rows)|ext_result)|rollback|i(nsert_id|s_instance)|move_cursor)\b</string>
					<key>name</key>
					<string>support.function.cubrid.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bcurl_(e(xec|rr(no|or)|scape)|init|c(lose|opy_handle)|pause|reset|s(etopt(_array)?|trerror|hare_(init|close|errno|s(etopt|trerror)))|getinfo|version|unescape|multi_(e(xec|rrno)|in(it|fo_read)|close|s(e(lect|topt)|trerror)|add_handle|getcontent|remove_handle))\b</string>
					<key>name</key>
					<string>support.function.curl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(date(_(parse(_from_format)?|sun(set|rise|_info)|default_timezone_(get|set)))?|time(zone_(version_get|name_from_abbr))?|idate|g(m(date|mktime|strftime)|et(date|timeofday))|m(ktime|icrotime)|str(ftime|ptime|totime)|checkdate|localtime)\b</string>
					<key>name</key>
					<string>support.function.datetime.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdba_(list|op(en|timize)|sync|close|f(etch|irstkey)|popen|delete|exists|insert|nextkey|replace|handlers|key_split)\b</string>
					<key>name</key>
					<string>support.function.dba.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdbase_(open|pack|c(lose|reate)|num(fields|records)|add_record|get_(record(_with_names)?|header_info)|delete_record|replace_record)\b</string>
					<key>name</key>
					<string>support.function.dbase.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdbplus_(a(dd|ql)|s(ql|avepos|etindex(bynumber)?)|t(cl|remove)|c(urr|hdir|lose)|f(i(nd|rst)|lush|ree(lock|rlocks|alllocks))|info|l(ast|ockrel)|next|open|prev|r(zap|keys|open|query|c(hperm|r(eate|t(like|exact)))|es(olve|torepos)|rename|unlink|secindex)|u(n(do(prepare)?|select|lockrel)|pdate)|err(no|code)|get(lock|unique)|x(lockrel|unlockrel))\b</string>
					<key>name</key>
					<string>support.function.dbplus.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdio_(open|read|s(eek|tat)|close|fcntl|write|t(runcate|csetattr))\b</string>
					<key>name</key>
					<string>support.function.dio.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(dir|c(h(dir|root)|losedir)|getcwd|opendir|re(addir|winddir)|scandir)\b</string>
					<key>name</key>
					<string>support.function.dir.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdom_import_simplexml\b</string>
					<key>name</key>
					<string>support.function.dom.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\beio_(g(rp(_(add|limit|cancel))?|et_(last_error|event_stream))|n(op|re(qs|ady)|pending|threads)|busy|dup2|init|l(ink|stat)|open|poll|r(e(a(d(dir|link|ahead)?|lpath)|name)|mdir)|s(e(ek|ndfile|t_m(ax_(idle|p(arallel|oll_(reqs|time)))|in_parallel))|tat(vfs)?|y(nc(fs|_file_range)?|mlink))|c(h(mod|own)|lose|ancel|ustom)|f(s(tat(vfs)?|ync)|ch(mod|own)|utime|allocate|datasync|truncate)|mk(dir|nod)|u(time|nlink)|write|truncate|event_loop)\b</string>
					<key>name</key>
					<string>support.function.eio.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\benchant_(dict_(add(_to_session)?|check|s(uggest|tore_replacement)|describe|is_added|get_error|quick_check)|broker_(free(_dict)?|init|d(escribe|ict_exists)|get_(error|dict_path)|list_dicts|request_(dict|pwl_dict)|set_(ordering|dict_path)))\b</string>
					<key>name</key>
					<string>support.function.enchant.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(error_(log|get_last|reporting|clear_last)|trigger_error|debug_(backtrace|print_backtrace)|set_e(rror_handler|xception_handler)|restore_e(rror_handler|xception_handler))\b</string>
					<key>name</key>
					<string>support.function.errorfunc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(e(xec|scapeshell(arg|cmd))|s(ystem|hell_exec)|p(assthru|roc_(nice|open|close|terminate|get_status)))\b</string>
					<key>name</key>
					<string>support.function.exec.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bexif_(t(agname|humbnail)|imagetype|read_data)\b</string>
					<key>name</key>
					<string>support.function.exif.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bexpect_(popen|expectl)\b</string>
					<key>name</key>
					<string>support.function.expect.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bfann_(r(un|e(set_(MSE|err(no|str))|ad_train_from_file)|andomize_weights)|c(opy|reate_(train(_from_callback)?|s(parse(_array)?|hortcut(_array)?|tandard(_array)?)|from_file)|ascadetrain_on_(data|file)|lear_scaling_params)|s(ave(_train)?|et_(weight(_array)?|ca(llback|scade_(m(ax_(out_epochs|cand_epochs)|in_(out_epochs|cand_epochs))|candidate_(limit|change_fraction|stagnation_epochs)|weight_multiplier|activation_(functions|steepnesses)|num_candidate_groups|output_(change_fraction|stagnation_epochs)))|error_log|quickprop_(mu|decay)|learning_(rate|momentum)|bit_fail_limit|s(caling_params|arprop_(temperature|step_error_(shift|threshold_factor)|weight_decay_shift))|rprop_(de(lta_(m(ax|in)|zero)|crease_factor)|increase_factor)|train(ing_algorithm|_(stop_function|error_function))|activation_(function(_(layer|hidden|output))?|steepness(_(layer|hidden|output))?)|input_scaling_params|output_scaling_params)|cale_(input(_train_data)?|train(_data)?|output(_train_data)?)|ubset_train_data|huffle_train_data)|t(est(_data)?|rain(_(epoch|on_(data|file)))?)|d(es(troy(_train)?|cale_(input|train|output))|uplicate_train_data)|get_(MSE|err(no|str)|bi(t_fail(_limit)?|as_array)|n(um_(input|layers|output)|etwork_type)|l(ayer_array|earning_(rate|momentum))|quickprop_(mu|decay)|t(otal_(neurons|connections)|rain(ing_algorithm|_(stop_function|error_function)))|c(onnection_(rate|array)|ascade_(m(ax_(out_epochs|cand_epochs)|in_(out_epochs|cand_epochs))|num_candidate(s|_groups)|candidate_(limit|change_fraction|stagnation_epochs)|weight_multiplier|activation_(functions(_count)?|steepnesses(_count)?)|output_(change_fraction|stagnation_epochs)))|rprop_(de(lta_(m(ax|in)|zero)|crease_factor)|increase_factor)|activation_(function|steepness)|sarprop_(temperature|step_error_(shift|threshold_factor)|weight_decay_shift))|print_error|init_weights|merge_train_data|length_train_data|num_(input_train_data|output_train_data))\b</string>
					<key>name</key>
					<string>support.function.fann.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bfbsql_(c(lo(se|b_size)|o(mmit|nnect)|reate_(db|blob|clob)|hange_user)|err(no|or)|query|r(e(sult|ad_(blob|clob))|o(llback|ws_fetched))|d(rop_db|ata(base(_password)?|_seek)|b_(query|status))|s(t(op_db|art_db)|e(lect_db|t_(lob_mode|password|transaction|characterset)))|hostname|list_(dbs|fields|tables)|n(um_(rows|fields)|ext_result)|p(assword|connect)|username|warnings|blob_size|f(etch_(row|a(rray|ssoc)|field|object|lengths)|ield_(len|name|seek|t(ype|able)|flags)|ree_result)|insert_id|a(utocommit|ffected_rows)|table_name|get_autostart_info)\b</string>
					<key>name</key>
					<string>support.function.fbsql.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bfdf_(open(_string)?|s(ave(_string)?|et_(ap|o(pt|n_import_javascript)|f(ile|lags)|v(alue|ersion)|s(tatus|ubmit_form_action)|encoding|target_frame|javascript_action))|c(lose|reate)|e(rr(no|or)|num_values)|get_(a(p|ttachment)|opt|f(ile|lags)|v(alue|ersion)|status|encoding)|header|remove_item|add_(template|doc_javascript)|next_field_name)\b</string>
					<key>name</key>
					<string>support.function.fdf.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(finfo(_(file|open|close|buffer|set_flags))?|mime_content_type)\b</string>
					<key>name</key>
					<string>support.function.fileinfo.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bfilepro(_(r(etrieve|owcount)|field(name|type|count|width)))?\b</string>
					<key>name</key>
					<string>support.function.filepro.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(c(opy|h(grp|mod|own)|learstatcache)|f(eof|ile(size|type|atime|ctime|group|inode|mtime|owner|perms|_(exists|get_contents|put_contents))?|get(c(sv)?|s(s)?)|lock|open|read|s(eek|tat|canf)|t(ell|runcate)|close|flush|write|nmatch|p(utcsv|assthru))|glob|l(ink(info)?|stat|ch(grp|own))|s(tat|ymlink)|m(kdir|ove_uploaded_file)|p(open|close|a(thinfo|rse_ini_(file|string)))|r(mdir|e(name|wind|a(d(file|link)|lpath(_cache_(get|size))?)))|t(ouch|empnam|mpfile)|u(mask|nlink)|is_(dir|file|link|readable|writable|executable|uploaded_file)|di(rname|sk_(free_space|total_space))|basename)\b</string>
					<key>name</key>
					<string>support.function.filesystem.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bfilter_(i(d|nput(_array)?)|var(_array)?|list|has_var)\b</string>
					<key>name</key>
					<string>support.function.filter.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bfastcgi_finish_request\b</string>
					<key>name</key>
					<string>support.function.fpm.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bftp_(get(_option)?|p(ut|wd|asv)|r(aw(list)?|mdir|ename)|c(dup|h(dir|mod)|lose|onnect)|exec|f(get|put)|m(dtm|lsd|kdir)|s(i(te|ze)|ystype|et_option|sl_connect)|a(lloc|ppend)|login|n(list|b_(get|put|f(get|put)|continue))|delete)\b</string>
					<key>name</key>
					<string>support.function.ftp.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(f(unc(_(get_arg(s)?|num_args)|tion_exists)|orward_static_call(_array)?)|c(all_user_func(_array)?|reate_function)|get_defined_functions|register_(tick_function|shutdown_function)|unregister_tick_function)\b</string>
					<key>name</key>
					<string>support.function.funchand.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bgeoip_(d(b_(avail|filename|get_all_info)|atabase_info|omain_by_name)|i(d_by_name|sp_by_name)|org_by_name|asnum_by_name|re(cord_by_name|gion_(by_name|name_by_code))|co(untry_(code(_by_name|3_by_name)|name_by_name)|ntinent_code_by_name)|netspeedcell_by_name|setup_custom_directory|time_zone_by_country_and_region)\b</string>
					<key>name</key>
					<string>support.function.geoip.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(gettext|d(gettext|c(gettext|ngettext)|ngettext)|ngettext|textdomain|bind(textdomain|_textdomain_codeset))\b</string>
					<key>name</key>
					<string>support.function.gettext.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bgmp_(or|a(bs|dd|nd)|c(mp|om|lrbit)|gcd(ext)?|l(cm|egendre)|m(od|ul)|ne(g|xtprime)|p(o(w(m)?|pcount)|rob_prime|erfect_(power|square))|s(ub|ign|qrt(rem)?|can(1)?|etbit|trval)|xor|fact|i(n(it|tval|vert)|mport)|r(oot(rem)?|andom(_(bits|seed|range))?)|div(_(q(r)?|r)|exact)|export|jacobi|hamdist|testbit|binomial|kronecker)\b</string>
					<key>name</key>
					<string>support.function.gmp.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bgnupg_(i(nit|mport)|s(ign|et(armor|signmode|errormode))|e(xport|ncrypt(sign)?)|verify|decrypt(verify)?|keyinfo|get(error|protocol)|add(signkey|decryptkey|encryptkey)|clear(signkeys|decryptkeys|encryptkeys))\b</string>
					<key>name</key>
					<string>support.function.gnupg.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bhash(_(copy|fi(le|nal)|h(kdf|mac(_(file|algos))?)|init|algos|equals|pbkdf2|update(_(file|stream))?))?\b</string>
					<key>name</key>
					<string>support.function.hash.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(ibase_(c(lose|o(mmit(_ret)?|nnect))|query|trans|b(ackup|lob_(add|get|echo|i(nfo|mport)|open|c(lose|ancel|reate)))|e(rr(msg|code)|xecute)|gen_id|d(b_info|rop_db|elete_user)|p(repare|connect|aram_info)|r(estore|ollback(_ret)?)|a(dd_user|ffected_rows)|f(etch_(row|assoc|object)|ield_info|ree_(query|result|event_handler))|n(um_(fields|params)|ame_result)|wait_event|m(aintain_db|odify_user)|se(rv(er_info|ice_(attach|detach))|t_event_handler))|fbird_blob_cancel)\b</string>
					<key>name</key>
					<string>support.function.ibase.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bdb2_(e(xec(ute)?|scape_string)|c(l(ose|ient_info)|o(mmit|lumn(s|_privileges)|nn(ect|_error(msg)?))|ursor_type)|p(c(lose|onnect)|r(epare|ocedure(s|_columns)|imary_keys))|r(esult|ollback)|table(s|_privileges)|l(ob_read|ast_insert_id)|n(um_(rows|fields)|ext_result)|f(etch_(row|both|a(rray|ssoc)|object)|ield_(n(um|ame)|type|scale|width|precision|display_size)|ree_(stmt|result)|oreign_keys)|autocommit|bind_param|get_option|s(e(t_option|rver_info)|t(atistics|mt_error(msg)?)|pecial_columns))\b</string>
					<key>name</key>
					<string>support.function.ibm-db2.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(iconv(_(s(tr(len|pos|rpos)|ubstr|et_encoding)|mime_(decode(_headers)?|encode)|get_encoding))?|ob_iconv_handler)\b</string>
					<key>name</key>
					<string>support.function.iconv.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(g(d_info|etimagesize(fromstring)?)|i(mage(g(d(2)?|if|et(clip|interpolation)|rab(screen|window)|ammacorrect)|s(x|y|cale|tring(up)?|et(clip|t(ile|hickness)|brush|pixel|style|interpolation)|avealpha)|a(rc|ffine(matrix(get|concat))?|ntialias|lphablending)|bmp|p(ng|olygon|alette(copy|totruecolor))|xbm|c(har(up)?|o(py(merge(gray)?|res(ized|ampled))?|lor(a(t|llocate(alpha)?)|s(et|total|forindex)|exact(alpha)?|match|closest(hwb|alpha)?|resolve(alpha)?|deallocate|transparent)|nvolution)|r(op(auto)?|eate(from(g(d(2(part)?)?|if)|bmp|png|x(bm|pm)|jpeg|w(bmp|ebp)|string)|truecolor)?))|f(il(l(ed(arc|ellipse|polygon|rectangle)|toborder)?|ter)|lip|t(bbox|text)|ont(width|height))|jpeg|l(ine|oadfont|ayereffect)|w(bmp|ebp)|2wbmp|t(ypes|tf(bbox|text)|ruecolortopalette)|r(otate|e(ctangle|solution))|d(estroy|ashedline)|ellipse|i(nterlace|struecolor)|openpolygon|_type_to_(extension|mime_type))|ptc(embed|parse))|png2wbmp|jpeg2wbmp)\b</string>
					<key>name</key>
					<string>support.function.image.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bimap_(g(c|et(acl|_quota(root)?|mailboxes|subscribed))|u(id|tf(8(_to_mutf7)?|7_(decode|encode))|n(delete|subscribe))|8bit|b(ody(struct)?|ase64|inary)|l(ist(scan)?|sub|ast_error)|m(ail(_(co(py|mpose)|move)|boxmsginfo)?|sgno|utf7_to_utf8|ime_header_decode)|open|ping|s(ort|e(arch|t(acl|_quota|flag_full))|tatus|avebody|ubscribe)|c(heck|l(ose|earflag_full)|reatemailbox)|a(lerts|ppend)|delete(mailbox)?|e(rrors|xpunge)|qprint|r(e(open|namemailbox)|fc822_(parse_(adrlist|headers)|write_address))|t(hread|imeout)|header(s|info)|num_(msg|recent)|fetch(body|mime|header|_overview|structure))\b</string>
					<key>name</key>
					<string>support.function.imap.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(dl|assert(_options)?|g(et(env|opt|my(gid|pid|uid|inode)|rusage|lastmod|_(c(fg_var|urrent_user)|resources|include(_path|d_files)|extension_funcs|magic_quotes_(gpc|runtime)|defined_constants|loaded_extensions))|c_(enable(d)?|status|disable|mem_caches|collect_cycles))|p(utenv|hp(info|_(uname|sapi_name|ini_(loaded_file|scanned_files))|credits|version))|ini_(get(_all)?|set|restore)|zend_(version|thread_id)|s(et_(time_limit|include_path)|ys_get_temp_dir)|version_compare|extension_loaded|memory_get_(usage|peak_usage)|restore_include_path|cli_(get_process_title|set_process_title))\b</string>
					<key>name</key>
					<string>support.function.info.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bingres_(c(lose|o(mmit|nnect)|ursor|harset)|e(rr(no|or|sqlstate)|xecute|scape_string)|query|p(repare|connect)|n(um_(rows|fields)|ext_error)|r(ollback|esult_seek)|f(etch_(row|a(rray|ssoc)|object|proc_return)|ield_(n(ame|ullable)|type|scale|length|precision)|ree_result)|autocommit(_state)?|set_environment|unbuffered_query)\b</string>
					<key>name</key>
					<string>support.function.ingres.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\binotify_(init|r(ead|m_watch)|add_watch|queue_len)\b</string>
					<key>name</key>
					<string>support.function.inotify.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(i(dn_to_(utf8|ascii)|ntl_(error_name|is_failure|get_error_(code|message)))|grapheme_(s(tr(len|pos|str|i(pos|str)|r(pos|ipos))|ubstr)|extract))\b</string>
					<key>name</key>
					<string>support.function.intl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bjson_(decode|encode|last_error(_msg)?)\b</string>
					<key>name</key>
					<string>support.function.json.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bldap_(add(_ext)?|bind(_ext)?|e(x(op(_(passwd|whoami|refresh))?|plode_dn)|rr(no|or|2str)|scape)|list|re(ad|name(_ext)?)|s(ort|e(arch|t_(option|rebind_proc))|asl_bind|tart_tls)|d(elete(_ext)?|n2ufn)|get_(dn|option|values(_len)?|entries|attributes)|unbind|co(mpare|n(nect|trol_paged_result(_response)?)|unt_entries)|mod(_(add(_ext)?|del(_ext)?|replace(_ext)?)|ify_batch)|next_(entry|attribute|reference)|parse_(exop|re(sult|ference))|8859_to_t61|f(irst_(entry|attribute|reference)|ree_result)|t61_to_8859)\b</string>
					<key>name</key>
					<string>support.function.ldap.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\blibxml_(get_(errors|last_error)|clear_errors|set_(streams_context|external_entity_loader)|use_internal_errors|disable_entity_loader)\b</string>
					<key>name</key>
					<string>support.function.libxml.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\blzf_(compress|decompress|optimized_for)\b</string>
					<key>name</key>
					<string>support.function.lzf.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(mail|ezmlm_hash)\b</string>
					<key>name</key>
					<string>support.function.mail.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmailparse_(msg_(free|parse(_file)?|create|get_(part(_data)?|structure)|extract_(part(_file)?|whole_part_file))|uudecode_all|stream_encode|rfc822_parse_addresses|determine_best_xfer_encoding)\b</string>
					<key>name</key>
					<string>support.function.mailparse.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(p(i|ow)|a(bs|cos(h)?|sin(h)?|tan(2|h)?)|c(os(h)?|eil)|exp(m1)?|l(og(1(p)?)?|cg_value)|m(ax|in|t_(rand|srand|getrandmax))|s(in(h)?|qrt|rand)|tan(h)?|f(div|mod|loor)|r(a(nd|d2deg)|ound)|h(ypot|exdec)|b(indec|ase_convert)|de(c(bin|hex|oct)|g2rad)|i(ntdiv|s_(nan|finite|infinite))|octdec|getrandmax)\b</string>
					<key>name</key>
					<string>support.function.math.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmb_(c(h(r|eck_encoding)|onvert_(case|kana|encoding|variables))|o(rd|utput_handler)|e(reg(i(_replace)?|_(match|search(_(pos|init|regs|get(pos|regs)|setpos))?|replace(_callback)?))?|ncod(ing_aliases|e_(mimeheader|numericentity)))|s(crub|plit|tr(cut|len|pos|str|i(pos|str|mwidth)|r(chr|pos|i(chr|pos))|width|_split|to(lower|upper))|ubst(r(_count)?|itute_character)|end_mail)|get_info|l(anguage|ist_encodings)|p(arse_str|referred_mime_name)|http_(input|output)|de(tect_(order|encoding)|code_(mimeheader|numericentity))|regex_(encoding|set_options)|internal_encoding)\b</string>
					<key>name</key>
					<string>support.function.mbstring.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bm(crypt_(c(bc|fb|reate_iv)|e(cb|nc(rypt|_(self_test|get_(iv_size|key_size|block_size|modes_name|algorithms_name|supported_key_sizes)|is_block_(mode|algorithm(_mode)?))))|ofb|decrypt|ge(neric(_(end|init|deinit))?|t_(iv_size|key_size|block_size|cipher_name))|list_(modes|algorithms)|module_(open|close|self_test|is_block_(mode|algorithm(_mode)?)|get_(algo_(key_size|block_size)|supported_key_sizes)))|decrypt_generic)\b</string>
					<key>name</key>
					<string>support.function.mcrypt.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmemcache_debug\b</string>
					<key>name</key>
					<string>support.function.memcache.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmhash(_(count|keygen_s2k|get_(hash_name|block_size)))?\b</string>
					<key>name</key>
					<string>support.function.mhash.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(e(val|xit)|p(ack|hp_strip_whitespace)|s(leep|ys_getloadavg|api_windows_(cp_(get|set|conv|is_utf8)|vt100_support|set_ctrl_handler|generate_ctrl_event))|define(d)?|h(rtime|ighlight_(file|string))|u(n(iqid|pack)|sleep)|con(stant|nection_(status|aborted))|get_browser|time_(nanosleep|sleep_until)|__halt_compiler|ignore_user_abort)\b</string>
					<key>name</key>
					<string>support.function.misc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bbson_(decode|encode)\b</string>
					<key>name</key>
					<string>support.function.mongo.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmqseries_(get|inq|put(1)?|s(et|trerror)|b(ack|egin)|c(mit|onn(x)?|lose)|disc|open)\b</string>
					<key>name</key>
					<string>support.function.mqseries.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysql_(in(fo|sert_id)|p(ing|connect)|s(tat|e(lect_db|t_charset))|c(l(ose|ient_encoding)|onnect|reate_db)|e(rr(no|or)|scape_string)|query|re(sult|al_escape_string)|d(b_(name|query)|rop_db|ata_seek)|list_(dbs|fields|tables|processes)|num_(rows|fields)|f(etch_(row|a(rray|ssoc)|field|object|lengths)|ield_(len|name|seek|t(ype|able)|flags)|ree_result)|t(ablename|hread_id)|affected_rows|get_(host_info|proto_info|client_info|server_info)|unbuffered_query)\b</string>
					<key>name</key>
					<string>support.function.mysql.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqli_get_(links_stats|client_stats)\b</string>
					<key>name</key>
					<string>support.function.mysqli.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqlnd_memcache_(set|get_config)\b</string>
					<key>name</key>
					<string>support.function.mysqlnd-memcache.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqlnd_ms_(xa_(gc|begin|commit|rollback)|set_(qos|user_pick_server)|get_(stats|last_(gtid|used_connection))|match_wild|dump_servers|query_is_select|fabric_select_(shard|global))\b</string>
					<key>name</key>
					<string>support.function.mysqlnd-ms.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqlnd_qc_(clear_cache|set_(is_select|user_handlers|cache_condition|storage_handler)|get_(c(ache_info|ore_stats)|query_trace_log|available_handlers|normalized_query_trace_log))\b</string>
					<key>name</key>
					<string>support.function.mysqlnd-qc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bmysqlnd_uh_(convert_to_mysqlnd|set_(statement_proxy|connection_proxy))\b</string>
					<key>name</key>
					<string>support.function.mysqlnd-uh.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bncurses_(n(l|o(nl|raw|echo|cbreak|qiflush)|apms|ew(pad|win|_panel))|e(nd|cho(char)?|rase(char)?)|r(aw|e(fresh|set(ty|_(prog_mode|shell_mode))|place_panel))|b(eep|kgd(set)?|o(rder|ttom_panel)|audrate)|i(n(ch|it(_(pair|color))?|s(ch|tr|str|delln|ertln))|sendwin)|m(eta|o(ve(_panel)?|use(mask|_trafo|interval))|v(cur|inch|add(ch(str|nstr)?|str|nstr)|delch|getch|hline|vline|waddstr))|p(utp|refresh|a(nel_(above|below|window)|ir_content)|noutrefresh)|s(cr(l|_(set|dump|init|restore))|avetty|lk_(set|attr(o(n|ff)|set)?|init|c(lear|olor)|touch|re(fresh|store)|noutrefresh)|ta(nd(end|out)|rt_color)|how_panel)|a(dd(ch(str|nstr)?|str|nstr)|ttr(o(n|ff)|set)|ssume_default_colors)|c(l(ear|rto(bot|eol))|break|urs_set|olor_(set|content)|an_change_color)|d(e(l(ch|win|eteln|_panel|ay_output)|f(ine_key|_(prog_mode|shell_mode)))|oupdate)|f(l(ash|ushinp)|ilter)|get(ch|yx|m(axyx|ouse))|h(line|a(s_(i(c|l)|key|colors)|lfdelay)|ide_panel)|k(ey(ok|pad)|illchar)|v(line|idattr)|w(mo(ve|use_trafo)|a(dd(ch|str)|ttr(o(n|ff)|set))|c(lear|olor_set)|erase|getch|hline|vline|border|refresh|stand(end|out)|noutrefresh)|qiflush|t(imeout|erm(name|attrs)|op_panel|ypeahead)|u(nget(ch|mouse)|se_(e(nv|xtended_names)|default_colors)|pdate_panels)|longname)\b</string>
					<key>name</key>
					<string>support.function.ncurses.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(h(eader(s_(list|sent)|_re(move|gister_callback))?|ttp_response_code)|s(yslog|et(cookie|rawcookie))|get(mxrr|host(name|by(addr|name(l)?))|servby(name|port)|protobyn(ame|umber))|i(p2long|net_(ntop|pton))|long2ip|openlog|c(loselog|heckdnsrr)|fsockopen|pfsockopen|dns_get_record)\b</string>
					<key>name</key>
					<string>support.function.network.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\boauth_(get_sbs|urlencode)\b</string>
					<key>name</key>
					<string>support.function.oauth.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\boci_(c(l(ose|ient_version)|ancel|o(mmit|nnect))|e(rror|xecute)|f(etch(_(a(ll|rray|ssoc)|row|object))?|ield_(name|s(ize|cale)|type(_raw)?|is_null|precision)|ree_(statement|descriptor))|p(a(rse|ssword_change)|connect)|r(e(sult|gister_taf_callback)|ollback)|lob_(copy|is_equal)|n(um_(rows|fields)|ew_(c(ursor|o(nnect|llection))|descriptor))|s(e(t_(action|edition|prefetch|c(lient_i(nfo|dentifier)|all_timeout)|module_name|db_operation)|rver_version)|tatement_type)|bind_(by_name|array_by_name)|define_by_name|get_implicit_resultset|unregister_taf_callback)\b</string>
					<key>name</key>
					<string>support.function.oci8.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bopcache_(reset|get_(status|configuration)|i(nvalidate|s_script_cached)|compile_file)\b</string>
					<key>name</key>
					<string>support.function.opcache.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bopenal_(s(tream|ource_(get|s(et|top)|p(lay|ause)|create|rewind|destroy))|buffer_(get|d(ata|estroy)|create|loadwav)|device_(open|close)|listener_(get|set)|context_(c(reate|urrent)|destroy|process|suspend))\b</string>
					<key>name</key>
					<string>support.function.openal.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bopenssl_(open|s(eal|ign|pki_(new|export(_challenge)?|verify))|d(igest|ecrypt|h_compute_key)|p(bkdf2|k(ey_(new|free|derive|export(_to_file)?|get_(p(ublic|rivate)|details))|cs(7_(read|sign|verify|decrypt|encrypt)|12_(read|export(_to_file)?)))|ublic_(decrypt|encrypt)|rivate_(decrypt|encrypt))|verify|c(sr_(new|sign|export(_to_file)?|get_(subject|public_key))|ms_(read|sign|verify|decrypt|encrypt)|ipher_iv_length)|e(ncrypt|rror_string)|free_key|x509_(f(ree|ingerprint)|read|parse|export(_to_file)?|verify|check(purpose|_private_key))|get_(md_methods|c(urve_names|ert_locations|ipher_methods))|random_pseudo_bytes)\b</string>
					<key>name</key>
					<string>support.function.openssl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(flush|o(b_(clean|flush|start|end_(clean|flush)|g(et_(c(lean|ontents)|flush|le(vel|ngth)|status)|zhandler)|list_handlers|implicit_flush)|utput_(add_rewrite_var|reset_rewrite_vars)))\b</string>
					<key>name</key>
					<string>support.function.outcontrol.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpx_(n(ew|um(fields|records))|c(lose|reate_fp)|d(elete(_record)?|ate2string)|open_fp|get_(info|field|value|record|schema|parameter)|set_(value|blob_file|parameter|ta(blename|rgetencoding))|put_record|insert_record|update_record|retrieve_record|timestamp2string)\b</string>
					<key>name</key>
					<string>support.function.paradox.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpassword_(hash|algos|verify|get_info|needs_rehash)\b</string>
					<key>name</key>
					<string>support.function.password.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpcntl_(exec|fork|w(ait(pid)?|stopsig|termsig|if(exited|s(topped|ignaled))|exitstatus)|a(larm|sync_signals)|s(ig(nal(_(dispatch|get_handler))?|procmask|waitinfo|timedwait)|trerror|etpriority)|get(priority|_last_error))\b</string>
					<key>name</key>
					<string>support.function.pcntl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpreg_(grep|match(_all)?|quote|split|filter|replace(_callback(_array)?)?|last_error(_msg)?)\b</string>
					<key>name</key>
					<string>support.function.pcre.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpg_(t(ty|ra(ce|nsaction_status))|host|p(ing|ort|repare|connect|ut_line|arameter_status)|c(l(ose|ient_encoding)|o(n(nect(_poll|ion_(busy|reset|status))?|vert|sume_input)|py_(to|from))|ancel_query)|f(lush|etch_(a(ll(_columns)?|rray|ssoc)|r(ow|esult)|object)|ield_(n(um|ame)|size|t(ype(_oid)?|able)|prtlen|is_null)|ree_result)|query(_params)?|d(bname|elete)|insert|s(e(lect|nd_(query(_params)?|execute|prepare)|t_(client_encoding|error_verbosity))|ocket)|u(pdate|n(trace|escape_bytea))|e(xecute|nd_copy|scape_(bytea|string|literal|identifier))|get_(pid|notify|result)|l(o_(open|read(_all)?|seek|t(ell|runcate)|c(lose|reate)|write|export|import|unlink)|ast_(oid|error|notice))|options|version|num_(rows|fields)|meta_data|result_(s(eek|tatus)|error(_field)?)|affected_rows)\b</string>
					<key>name</key>
					<string>support.function.pgsql.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bphpdbg_(e(xec|nd_oplog)|c(lear|olor)|prompt|break_(f(ile|unction)|next|method)|start_oplog|get_executable)\b</string>
					<key>name</key>
					<string>support.function.phpdbg.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bposix_(kill|mk(nod|fifo)|t(imes|tyname)|uname|access|get(cwd|g(id|r(gid|nam|oups))|p(id|g(id|rp)|pid|w(nam|uid))|sid|uid|e(gid|uid)|login|rlimit|_last_error)|i(satty|nitgroups)|s(et(gid|sid|uid|e(gid|uid)|pgid|rlimit)|trerror)|ctermid)\b</string>
					<key>name</key>
					<string>support.function.posix.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bset(proctitle|threadtitle)\b</string>
					<key>name</key>
					<string>support.function.proctitle.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bps_(a(rc(n)?|dd_(note|pdflink|weblink|bookmark|l(ocallink|aunchlink)))|new|c(l(ip|ose(path(_stroke)?|_image)?)|ircle|urveto|ontinue_text)|fi(ll(_stroke)?|ndfont)|r(e(ct|store)|otate)|s(ave|h(ow(2|_(xy(2)?|boxed))?|fill|ading(_pattern)?)|cale|tr(oke|ing(width|_geometry))|ymbol(_(name|width))?|et(dash|f(lat|ont)|gray|_(info|value|text_pos|parameter|border_(dash|color|style))|color|line(cap|join|width)|polydash|miterlimit|overprintmode))|delete|lineto|m(oveto|akespotcolor)|end_(pa(ge|ttern)|template)|get_(value|buffer|parameter)|hyphenate|open_(file|image(_file)?|memory_image)|translate|begin_(pa(ge|ttern)|template)|place_image|include_file)\b</string>
					<key>name</key>
					<string>support.function.ps.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bpspell_(new(_(config|personal))?|c(heck|onfig_(mode|r(epl|untogether)|create|ignore|d(ata_dir|ict_dir)|personal|save_repl)|lear_session)|s(uggest|ave_wordlist|tore_replacement)|add_to_(session|personal))\b</string>
					<key>name</key>
					<string>support.function.pspell.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bradius_(c(lose|onfig|vt_(int|addr|string)|reate_request)|put_(int|a(ddr|ttr)|string|vendor_(int|a(ddr|ttr)|string))|demangle(_mppe_key)?|get_(attr|vendor_attr|tagged_attr_(tag|data))|s(trerror|e(nd_request|rver_secret)|alt_encrypt_attr)|a(cct_open|uth_open|dd_server)|request_authenticator)\b</string>
					<key>name</key>
					<string>support.function.radius.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\brar_wrapper_cache_stats\b</string>
					<key>name</key>
					<string>support.function.rar.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\breadline(_(info|re(display|ad_history)|add_history|on_new_line|list_history|c(lear_history|allback_(read_char|handler_(remove|install))|ompletion_function)|write_history))?\b</string>
					<key>name</key>
					<string>support.function.readline.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\brecode_(file|string)\b</string>
					<key>name</key>
					<string>support.function.recode.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(ereg(i(_replace)?|_replace)?|s(plit(i)?|ql_regcase))\b</string>
					<key>name</key>
					<string>support.function.regex.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\brpm(info|addtag|db(info|search)|vercmp)\b</string>
					<key>name</key>
					<string>support.function.rpminfo.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\brrd(_(info|last(update)?|tune|error|f(etch|irst)|graph|xport|create|update|restore|version)|c_disconnect)\b</string>
					<key>name</key>
					<string>support.function.rrd.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\brunkit7_(import|object_id|method_(add|copy|re(move|name|define))|constant_(add|re(move|define))|function_(add|copy|re(move|name|define))|superglobals|zval_inspect)\b</string>
					<key>name</key>
					<string>support.function.runkit7.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bscoutapm_(get_calls|list_instrumented_functions)\b</string>
					<key>name</key>
					<string>support.function.scoutapm.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bseaslog_get_(author|version)\b</string>
					<key>name</key>
					<string>support.function.seaslog.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(ftok|s(em_(get|re(move|lease)|acquire)|hm_(attach|detach|remove(_var)?|get_var|has_var|put_var))|msg_(s(e(nd|t_queue)|tat_queue)|re(ceive|move_queue)|get_queue|queue_exists))\b</string>
					<key>name</key>
					<string>support.function.sem.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsession_(g(c|et_cookie_params)|i(d|s_registered)|name|abort|re(set|g(enerate_id|ister_shutdown))|s(ta(rt|tus)|ave_path|et_(save_handler|cookie_params))|un(set|register)|de(code|stroy)|encode|c(reate_id|ache_(expire|limiter))|module_name|write_close)\b</string>
					<key>name</key>
					<string>support.function.session.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bshmop_(open|read|size|close|write|delete)\b</string>
					<key>name</key>
					<string>support.function.shmop.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsimplexml_(load_(file|string)|import_dom)\b</string>
					<key>name</key>
					<string>support.function.simplexml.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsnmp(get(next)?|set|walk(oid)?|2_(get(next)?|set|walk|real_walk)|3_(get(next)?|set|walk|real_walk)|realwalk|_(read_mib|set_(enum_print|quick_print|valueretrieval|oid_(numeric_print|output_format))|get_(quick_print|valueretrieval)))\b</string>
					<key>name</key>
					<string>support.function.snmp.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(is_soap_fault|use_soap_error_handler)\b</string>
					<key>name</key>
					<string>support.function.soap.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsocket_(bind|re(ad|cv(msg|from)?)|s(e(nd(to|msg)?|lect|t_(block|option|nonblock))|hutdown|trerror)|c(l(ose|ear_error)|reate(_(pair|listen))?|onnect|msg_space)|w(rite|saprotocol_info_(export|import|release))|a(ccept|ddrinfo_(bind|lookup|connect|explain))|l(isten|ast_error)|get(_option|peername|sockname)|export_stream|import_stream)\b</string>
					<key>name</key>
					<string>support.function.sockets.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsodium_(add|pad|unpad|mem(cmp|zero)|b(in2(hex|base64)|ase642bin)|c(ompare|rypto_(box(_(open|se(al(_open)?|cretkey|ed_keypair)|keypair(_from_secretkey_and_publickey)?|publickey(_from_secretkey)?))?|a(uth(_(keygen|verify))?|ead_(aes256gcm_(keygen|decrypt|encrypt|is_available)|chacha20poly1305_(keygen|decrypt|encrypt|ietf_(keygen|decrypt|encrypt))|xchacha20poly1305_ietf_(keygen|decrypt|encrypt)))|s(ign(_(open|keypair(_from_secretkey_and_publickey)?|detached|publickey(_from_secretkey)?|se(cretkey|ed_keypair)|verify_detached|ed25519_(pk_to_curve25519|sk_to_curve25519)))?|tream(_(xor|keygen))?|ecret(box(_(open|keygen))?|stream_xchacha20poly1305_(pu(ll|sh)|rekey|keygen|init_pu(ll|sh)))|horthash(_keygen)?|calarmult)|pwhash(_s(tr(_(verify|needs_rehash))?|cryptsalsa208sha256(_str(_verify)?)?))?|k(df_(keygen|derive_from_key)|x_(keypair|publickey|se(cretkey|ed_keypair|rver_session_keys)|client_session_keys))|generichash(_(init|final|keygen|update))?))|hex2bin|increment)\b</string>
					<key>name</key>
					<string>support.function.sodium.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsolr_get_version\b</string>
					<key>name</key>
					<string>support.function.solr.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(class_(uses|parents|implements)|spl_(classes|autoload(_(call|register|functions|extensions|unregister))?|object_(id|hash))|iterator_(apply|count|to_array))\b</string>
					<key>name</key>
					<string>support.function.spl.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsqlsrv_(c(l(ose|ient_info)|ancel|o(mmit|n(nect|figure)))|f(etch(_(array|object))?|ree_stmt|ield_metadata)|query|e(rrors|xecute)|prepare|has_rows|n(um_(rows|fields)|ext_result)|ro(llback|ws_affected)|get_(field|config)|se(rver_info|nd_stream_data)|begin_transaction)\b</string>
					<key>name</key>
					<string>support.function.sqlsrv.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bssdeep_fuzzy_(hash(_filename)?|compare)\b</string>
					<key>name</key>
					<string>support.function.ssdeep.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bssh2_(exec|p(oll|ublickey_(add|init|list|remove))|s(ftp(_(s(tat|ymlink)|chmod|lstat|mkdir|r(mdir|e(name|a(dlink|lpath)))|unlink))?|hell|cp_(recv|send))|tunnel|connect|auth_(none|agent|p(assword|ubkey_file)|hostbased_file)|disconnect|f(ingerprint|etch_stream|orward_(accept|listen))|methods_negotiated)\b</string>
					<key>name</key>
					<string>support.function.ssh2.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bstats_(s(kew|ta(t_(p(aired_t|owersum|ercentile)|factorial|correlation|in(nerproduct|dependent_t)|binomial_coef)|ndard_deviation))|c(df_(f|t|b(eta|inomial)|gamma|c(auchy|hisquare)|n(o(rmal|ncentral_(f|t|chisquare))|egative_binomial)|l(aplace|ogistic)|poisson|uniform|weibull|exponential)|ovariance)|dens_(f|t|beta|gamma|c(auchy|hisquare)|normal|l(aplace|ogistic)|uniform|weibull|exponential|pmf_(poisson|binomial|hypergeometric|negative_binomial))|kurtosis|variance|rand_(ranf|ge(n_(f(uniform)?|t|i(nt|poisson|uniform|binomial(_negative)?)|beta|gamma|no(rmal|ncentral_(f|t|chisquare))|chisquare|exponential)|t_seeds)|setall|phrase_to_seeds)|harmonic_mean|absolute_deviation)\b</string>
					<key>name</key>
					<string>support.function.stats.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bstomp_(version|connect_error)\b</string>
					<key>name</key>
					<string>support.function.stomp.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bstream_(is(atty|_local)|s(e(lect|t_(timeout|blocking|chunk_size|read_buffer|write_buffer))|ocket_(pair|accept|client|s(e(ndto|rver)|hutdown)|get_name|recvfrom|enable_crypto)|upports_lock)|get_(line|filters|contents|wrappers|meta_data|transports)|bucket_(new|append|prepend|make_writeable)|filter_(append|re(move|gister)|prepend)|co(ntext_(create|get_(params|default|options)|set_(option|params|default))|py_to_stream)|wrapper_(re(store|gister)|unregister)|resolve_include_path|notification_callback)\b</string>
					<key>name</key>
					<string>support.function.stream.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(c(h(r|unk_split)|r(c32|ypt)|o(unt_chars|nvert_(uu(decode|encode)|cyr_string)))|m(d5(_file)?|etaphone|oney_format)|ord|e(cho|xplode)|s(ha1(_file)?|tr(t(r|o(k|lower|upper))|c(mp|oll|spn|asecmp)|len|p(os|brk)|r(ev|chr|pos|ipos)|s(pn|tr)|_(pad|r(ot13|ep(eat|lace))|s(plit|huffle|tarts_with)|getcsv|contains|ireplace|ends_with|word_count)|i(p(os|_tags|slashes|cslashes)|str)|n(c(mp|asecmp)|atc(mp|asecmp)))|scanf|ubstr(_(co(unt|mpare)|replace))?|oundex|printf|etlocale|imilar_text)|trim|l(trim|cfirst|ocaleconv|evenshtein)|n(l(2br|_langinfo)|umber_format)|p(rint(f)?|arse_str)|rtrim|h(e(brev(c)?|x2bin)|tml(entities|specialchars(_decode)?|_entity_decode))|bin2hex|fprintf|implode|uc(first|words)|v(printf|fprintf|sprintf)|wordwrap|quote(meta|d_printable_(decode|encode))|add(slashes|cslashes)|get_html_translation_table)\b</string>
					<key>name</key>
					<string>support.function.strings.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bsvn_(l(s|og)|a(dd|uth_(get_parameter|set_parameter))|c(at|ommit|l(eanup|ient_version)|heckout)|d(iff|elete)|blame|mkdir|export|import|re(vert|pos_(fs(_(commit_txn|begin_txn_for_commit))?|open|create|hotcopy|recover))|status|update|fs_(c(o(py|ntents_changed)|h(eck_path|ange_node_prop))|d(elete|ir_entries)|is_(dir|file)|make_(dir|file)|txn_root|a(bort_txn|pply_text)|node_(prop|created_rev)|begin_txn2|file_(length|contents)|youngest_rev|props_changed|revision_(prop|root)))\b</string>
					<key>name</key>
					<string>support.function.svn.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bswoole_(e(rrno|vent_(add|de(l|fer)|set|exit|w(ait|rite)))|s(e(lect|t_process_name)|trerror)|c(pu_num|lient_select)|version|async_(set|read(file)?|write(file)?|dns_lookup)|l(ast_error|oad_module)|timer_(tick|after|exists)|get_local_ip)\b</string>
					<key>name</key>
					<string>support.function.swoole-funcs.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(taint|untaint|is_tainted)\b</string>
					<key>name</key>
					<string>support.function.taint.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\btcpwrap_check\b</string>
					<key>name</key>
					<string>support.function.tcpwrap.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(ob_tidyhandler|tidy_(get_output|error_count|access_count|config_count|warning_count))\b</string>
					<key>name</key>
					<string>support.function.tidy.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\btoken_(name|get_all)\b</string>
					<key>name</key>
					<string>support.function.tokenizer.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\btrader_(a(d(d|x(r)?|osc)?|po|t(r|an)|cos|sin|roon(osc)?|vgprice)|d(x|iv|ema)|l(n|og1|inearreg(_(angle|slope|intercept))?)|m(a(x(index)?|cd(ext|fix)?|ma|vp)?|fi|i(n(max(index)?|index|us_d(i|m))?|dp(oint|rice))|om|ult|edprice)|t(3|an(h)?|sf|ema|r(i(x|ma)|ange)|ypprice)|b(op|eta|bands)|c(ci|mo|o(s(h)?|rrel)|eil|dl(d(oji(star)?|ragonflydoji|arkcloudcover)|2crows|h(a(mmer|rami(cross)?|ngingman)|i(kkake(mod)?|ghwave)|omingpigeon)|i(n(neck|vertedhammer)|dentical3crows)|onneck|t(a(kuri|sukigap)|ristar|hrusting)|3(inside|outside|blackcrows|linestrike|starsinsouth|whitesoldiers)|kicking(bylength)?|m(a(t(hold|chinglow)|rubozu)|orning(star|dojistar))|b(elthold|reakaway)|l(ongl(ine|eggeddoji)|adderbottom)|piercing|e(ngulfing|vening(star|dojistar))|s(ho(rtline|otingstar)|pinningtop|t(icksandwich|alledpattern)|eparatinglines)|ri(ckshawman|sefall3methods)|a(dvanceblock|bandonedbaby)|u(nique3river|psidegap2crows)|c(o(unterattack|ncealbabyswall)|losingmarubozu)|g(ravestonedoji|apsidesidewhite)|xsidegap3methods))|e(ma|xp|rrno)|obv|p(po|lus_d(i|m))|r(oc(p|r(10)?)?|si)|s(ar(ext)?|in(h)?|ma|u(b|m)|qrt|t(och(f|rsi)?|ddev)|et_(compat|unstable_period))|var|w(ma|illr|clprice)|kama|natr|floor|ultosc|ht_(sine|phasor|dcp(hase|eriod)|trend(line|mode))|get_(compat|unstable_period))\b</string>
					<key>name</key>
					<string>support.function.trader.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bodbc_(e(xec(ute)?|rror(msg)?)|c(lose(_all)?|o(mmit|lumn(s|privileges)|nnect)|ursor)|r(esult(_all)?|ollback)|table(s|privileges)|binmode|p(r(epare|ocedure(s|columns)|imarykeys)|connect)|n(um_(rows|fields)|ext_result)|f(etch_(row|into|array|object)|ield_(len|n(um|ame)|type|scale)|oreignkeys|ree_result)|s(etoption|tatistics|pecialcolumns)|autocommit|data_source|gettypeinfo|longreadlen)\b</string>
					<key>name</key>
					<string>support.function.uodbc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\buopz_(co(py|mpose)|f(lags|unction)|backup|del(ete|_function)|extend|re(name|store|define)|get_(hook|mock|return|static|property|exit_status)|overload|set_(hook|mock|return|static|property)|un(define|set_(hook|mock|return))|implement|a(llow_exit|dd_function))\b</string>
					<key>name</key>
					<string>support.function.uopz.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(parse_url|url(decode|encode)|get_(headers|meta_tags)|rawurl(decode|encode)|base64_(decode|encode)|http_build_query)\b</string>
					<key>name</key>
					<string>support.function.url.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(empty|i(s(set|_(i(nt|terable)|bool|nu(ll|meric)|array|float|object|s(calar|tring)|c(allable|ountable)|resource))|ntval)|unse(t|rialize)|s(trval|e(ttype|rialize))|boolval|get(type|_(resource_(id|type)|defined_vars))|print_r|floatval|var_(dump|export)|debug_zval_dump)\b</string>
					<key>name</key>
					<string>support.function.var.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bwddx_(add_vars|packet_(end|start)|deserialize|serialize_va(rs|lue))\b</string>
					<key>name</key>
					<string>support.function.wddx.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bwin32_(s(t(op_service|art_service(_ctrl_dispatcher)?)|e(t_service_(status|exit_(code|mode))|nd_custom_control))|pause_service|c(reate_service|ontinue_service)|delete_service|query_service_status|get_last_control_message)\b</string>
					<key>name</key>
					<string>support.function.win32service.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bwincache_(lock|u(nlock|cache_(add|c(as|lear)|de(c|lete)|get|in(c|fo)|set|exists|meminfo))|scache_(info|meminfo)|fcache_(meminfo|fileinfo)|ocache_(meminfo|fileinfo)|r(plist_(meminfo|fileinfo)|efresh_if_changed))\b</string>
					<key>name</key>
					<string>support.function.wincache.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bxattr_(get|s(et|upported)|list|remove)\b</string>
					<key>name</key>
					<string>support.function.xattr.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bxdiff_(file_(diff(_binary)?|b(diff(_size)?|patch)|patch(_binary)?|merge3|rabdiff)|string_(diff|b(diff(_size)?|patch)|patch(_binary)?|merge3))\b</string>
					<key>name</key>
					<string>support.function.xdiff.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bxhprof_(enable|disable|sample_(enable|disable))\b</string>
					<key>name</key>
					<string>support.function.xhprof.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(xml_(parse(r_(free|create(_ns)?|get_option|set_option)|_into_struct)?|set_(object|default_handler|e(lement_handler|nd_namespace_decl_handler|xternal_entity_ref_handler)|notation_decl_handler|character_data_handler|start_namespace_decl_handler|unparsed_entity_decl_handler|processing_instruction_handler)|error_string|get_(error_code|current_(byte_index|line_number|column_number)))|utf8_(decode|encode))\b</string>
					<key>name</key>
					<string>support.function.xml.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bxmlrpc_(decode(_request)?|encode(_request)?|get_type|is_fault|se(t_type|rver_(c(reate|all_method)|destroy|register_(method|introspection_callback)|add_introspection_data))|parse_method_descriptions)\b</string>
					<key>name</key>
					<string>support.function.xmlrpc.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\byaml_(emit(_file)?|parse(_(url|file))?)\b</string>
					<key>name</key>
					<string>support.function.yaml.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\byaz_(e(s(_result)?|rr(no|or)|lement)|hits|s(c(an(_result)?|hema)|ort|e(arch|t_option)|yntax)|wait|c(lose|onnect|cl_(conf|parse))|r(ange|ecord)|addinfo|present|database|itemorder|get_option)\b</string>
					<key>name</key>
					<string>support.function.yaz.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bzip_(open|read|close|entry_(name|open|read|c(lose|ompress(edsize|ionmethod))|filesize))\b</string>
					<key>name</key>
					<string>support.function.zip.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(gz(e(of|ncode)|file|get(c|s(s)?)|open|re(ad|wind)|seek|tell|c(lose|ompress)|write|de(code|flate)|inflate|passthru|uncompress)|readgzfile|deflate_(add|init)|inflate_(add|init|get_(status|read_len))|zlib_(decode|encode|get_coding_type))\b</string>
					<key>name</key>
					<string>support.function.zlib.php</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\bzookeeper_dispatch\b</string>
					<key>name</key>
					<string>support.function.zookeeper.php</string>
				</dict>
			</array>
		</dict>
		<key>user-function-call</key>
		<dict>
			<key>begin</key>
			<string>(?i)(?=[a-z_0-9\\]*[a-z_][a-z0-9_]*\s*\()</string>
			<key>end</key>
			<string>(?i)[a-z_][a-z_0-9]*(?=\s*\()</string>
			<key>name</key>
			<string>meta.function-call.php</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#namespace</string>
				</dict>
			</array>
		</dict>
		<key>var_basic</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x)
        			            (\$+)[a-zA-Z_\x{7f}-\x{ff}]
        			            [a-zA-Z0-9_\x{7f}-\x{ff}]*?\b</string>
					<key>name</key>
					<string>variable.other.php</string>
				</dict>
			</array>
		</dict>
		<key>var_global</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.php</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\$)((_(COOKIE|FILES|GET|POST|REQUEST))|arg(v|c))\b</string>
			<key>name</key>
			<string>variable.other.global.php</string>
		</dict>
		<key>var_global_safer</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.php</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\$)((GLOBALS|_(ENV|SERVER|SESSION)))</string>
			<key>name</key>
			<string>variable.other.global.safer.php</string>
		</dict>
		<key>variable-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#var_global</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#var_global_safer</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>string.unquoted.index.php</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.array.end.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.class.php</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>variable.other.property.php</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.array.begin.php</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.index.php</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>variable.other.index.php</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Simple syntax: $foo, $foo[0], $foo[$bar], $foo-&gt;bar</string>
					<key>match</key>
					<string>(?x)
						((\$)(?&lt;name&gt;[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*))
						(?:
							(-&gt;)(\g&lt;name&gt;)
							|
							(\[)
								(?:(\d+)|((\$)\g&lt;name&gt;)|(\w+))
							(\])
						)?
						</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.php</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Simple syntax with braces: "foo${bar}baz"</string>
					<key>match</key>
					<string>(?x)
						((\$\{)(?&lt;name&gt;[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)(\}))
						</string>
				</dict>
			</array>
		</dict>
		<key>variables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#var_global</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#var_global_safer</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#var_basic</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\$\{)(?=.*?\})</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.variable.php</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#language</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.php</string>
	<key>uuid</key>
	<string>22986475-8CA5-11D9-AEDD-000D93C8BE28</string>
</dict>
</plist>
