<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveActiveFile</string>
	<key>command</key>
	<string>#!/usr/bin/env zsh

# FIXME Find a parent directory with phpstan.neon file.
cd $TM_PROJECT_DIRECTORY

search_path () {
	if [ -v TM_PHPSTAN ]; then
		echo $TM_PHPSTAN
		return
	fi
	if [ -f vendor/bin/phpstan ]; then
		echo vendor/bin/phpstan
		return
	fi
	which phpstan
	return
}
binpath=$(search_path)

args=()
args+=(--no-progress)
args+=(--memory-limit=-1)
args+=(--error-format=raw)
args+=(--no-ansi)
args+=(--verbose)

# Defaulting to bundle rules if no config file found.
if [ ! -f phpstan.neon ] &amp;&amp; [ ! -f phpstan.neon.dist ]; then
	args+=(--configuration=${TM_PHPSTAN_CONFIG:-$TM_BUNDLE_SUPPORT/phpstan.neon.dist})
fi

# Running in background to avoid stalling mainthread.
(
	# To support errors ignored in the baseline we cannot use temporary files.
	# This forces us to save the current document before running.
	message=$($binpath analyze $args $TM_FILEPATH 2&gt;&amp;1)
	code=$?

	# Mark has to be a pdf it seems.
	MARK="${TM_BUNDLE_SUPPORT}/resources/Warning.pdf"
	# Remove potential previous gutter marks, after phpstan has been run to reduce gutter flash.
	$TM_MATE --clear-mark=$MARK

	if [[ $code -eq 0 ]]; then
		exit
	fi
	if [[ $code -ne 1 ]]; then
		$TM_BUNDLE_SUPPORT/bin/tooltip "PHPStan failed ($code)" $message
		exit
	fi

	errors=();
	for line in ${(@f)message}; do
		if [[ $line =~ '^[^:]+:([0-9]+):(.*)' ]] &amp;&amp; linenro=$match[1] &amp;&amp; error=$match[2]; then
			if [[ $error =~ '^Ignored error pattern .* was not matched in reported errors.$' ]]; then
				continue
			fi

			$TM_MATE --line=$linenro --set-mark="$MARK:$error"

			# HTML escape.
			error=${error//&amp;/&amp;amp;}
			error=${error//&lt;/&amp;lt;}
			error=${error//&gt;/&amp;gt;}

			errors+=("$(printf '&lt;div class="linenro"&gt;%s&lt;/div&gt;&lt;span&gt;%s&lt;/span&gt;' $linenro $error)")
			continue
		fi
		if [[ $line =~ '^Note: Using configuration|^Used memory:' ]]; then
			continue
		fi
		errors+=($line)
	done

	if [[ ! -z $errors ]]; then
		$TM_BUNDLE_SUPPORT/bin/tooltip "&lt;strong&gt;PHPStan&lt;/strong&gt;" ${errors}
	fi
) &amp;&gt;/dev/null &amp;
</string>
	<key>input</key>
	<string>document</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>^V</string>
	<key>name</key>
	<string>PHPStan</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>text</string>
	<key>outputLocation</key>
	<string>toolTip</string>
	<key>scope</key>
	<string>source.php</string>
	<key>semanticClass</key>
	<string>callback.document.did-save</string>
	<key>uuid</key>
	<string>6C9CEDEF-5A94-40A3-A5FB-3A95997EAC85</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
